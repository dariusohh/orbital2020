{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login2/Register.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport GridLoader from \"react-spinners/ClipLoader\";\nimport { changeConfirmLocale } from 'antd/lib/modal/locale';\nimport { Redirect } from 'react-router-dom';\nimport startup_logo from \"./startup_logo.png\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: 'teal'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Register(props) {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = e.target.username.value;\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    const confirm = e.target.confirm.value;\n    props.onAuth(username, email, password, confirm).then(() => {\n      if (localStorage.getItem(\"username\")) {\n        window.location.href = \"/profile\";\n      }\n    });\n  };\n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Username/email already exist!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#e8f4f8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, localStorage.getItem(\"username\") && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: startup_logo,\n    alt: \"Startup Logo\",\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VpnKeyIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Registration\", props.loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginTop: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Loading \"), /*#__PURE__*/React.createElement(GridLoader, {\n    size: 30,\n    css: {\n      marginLeft: \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: e => setEmail(e.target.value),\n    error: !/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0,\n    helperText: !/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0 ? \"Invalid email address\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => setPassword(e.target.value),\n    error: password.length > 0 && password.length < 8,\n    helperText: password.length > 0 && password.length < 8 ? \"Your password must be at least 8 characters long\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"confirm\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confirm\",\n    autoComplete: \"current-password\",\n    onChange: e => setConfirm(e.target.value),\n    error: confirm.length > 0 && confirm !== password,\n    helperText: confirm.length > 0 && confirm !== password ? \"Your password does not match\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: confirm.length > 0 && confirm !== password || password.length > 0 && password.length < 8 || !/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0 || username.length === 0 || email.length === 0 || password.length === 0 || confirm.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Already have an account? Sign in\")))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => {\n      return dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login2/Register.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","VpnKeyIcon","Typography","makeStyles","Container","actions","connect","useForm","GridLoader","changeConfirmLocale","Redirect","startup_logo","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","Register","props","classes","username","setUsername","email","setEmail","password","setPassword","confirm","setConfirm","onSubmit","e","preventDefault","target","value","onAuth","then","localStorage","getItem","window","location","href","errorMessage","error","loading","marginLeft","test","length","mapStateToProps","state","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport * as actions from '../../store/actions/auth'\nimport { connect } from 'react-redux'; \nimport {useForm} from \"react-hook-form\";\nimport GridLoader from \"react-spinners/ClipLoader\"\nimport { changeConfirmLocale } from 'antd/lib/modal/locale';\nimport {Redirect} from 'react-router-dom';\nimport startup_logo from \"./startup_logo.png\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: 'teal',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Register(props) {\n  const classes = useStyles();\n  \n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = e.target.username.value\n    const email = e.target.email.value\n    const password = e.target.password.value\n    const confirm = e.target.confirm.value\n      props.onAuth(username, \n          email,\n          password,\n          confirm)\n          .then(() => {\n            if (localStorage.getItem(\"username\")) {\n              window.location.href = \"/profile\"\n            }\n            })\n    }\n\n  let errorMessage = null;\n    if (props.error) {\n        errorMessage = (\n            <p className = \"error\">Username/email already exist!</p>\n        )\n    }\n\n  return (\n\n    <div style={{backgroundColor:\"#e8f4f8\"}}>\n    {localStorage.getItem(\"username\") && \n    <Redirect to=\"/expense\"/>\n    }\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n      <img src={startup_logo} alt=\"Startup Logo\" style={{width:\"500px\"}}/>\n        <Avatar className={classes.avatar}>\n          <VpnKeyIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          Registration\n          { props.loading && \n                <div>    \n            <h4 style={{marginTop:\"5%\"}}>Loading </h4>\n            <GridLoader size={30} css={{marginLeft:\"35%\"}}/>\n            </div>\n            }\n            {errorMessage}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n          <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                onChange={e => setUsername(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={e => setEmail(e.target.value)}\n                error = {(!/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0)}\n                helperText = {(!/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0) ? \"Invalid email address\" : \"\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={e => setPassword(e.target.value)}\n                error={password.length > 0 && password.length < 8}\n                helperText={(password.length > 0 && password.length < 8) ? \"Your password must be at least 8 characters long\" : \"\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirm\"\n                autoComplete=\"current-password\"\n                onChange={e => setConfirm(e.target.value)}\n                error={confirm.length > 0 && confirm !== password}\n                helperText={(confirm.length > 0 && confirm !== password) ? \"Your password does not match\" : \"\"}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled = {\n              (confirm.length > 0 && confirm !== password) || \n              (password.length > 0 && password.length < 8) || \n              (!/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email) && email.length > 0) || \n              username.length === 0 || \n              email.length === 0 ||\n              password.length === 0 ||\n              confirm.length === 0\n\n            }\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body1\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => {\n            return dispatch(actions.authSignup(username,email, password1,password2))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);"]},"metadata":{},"sourceType":"module"}