{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/import.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-grid-system';\nimport './import.css';\nimport excel from 'xlsx';\nimport { ExcelRenderer, OutTable } from 'react-excel-renderer';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Import extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cols: \"\",\n      row: \"\",\n      workbook: \"\"\n    };\n\n    this.onSubmit = event => {\n      const name = event.target.name.value;\n      const amount = event.target.amount.value;\n      const username = localStorage.getItem(\"username\");\n      const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n      return axios.post('api/', {\n        name: name,\n        username: username,\n        amount: amount,\n        created_at: created_at\n      }).catch(err => console.log(err));\n    };\n\n    this.fileHandler = event => {\n      let fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows,\n            workbook: excel.readFile(fileObj)\n          });\n        }\n      }); // const username = localStorage.getItem(\"username\"); \n      // return this.state.rows.map(element => {\n      //     const name = element[0]\n      //     const amount = element[1]\n      //     const created_at =element[2]\n      // });\n    };\n\n    this.handleUpload = e => {\n      e.preventDefault();\n      let fileObj = e.target.files[0];\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n      var files = e.target.files,\n          f = files[0];\n      console.log();\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var data = e.target.result;\n        let readedData = excel.read(data, {\n          type: 'binary'\n        });\n        const wsname = readedData.SheetNames[0];\n        const ws = readedData.Sheets[wsname];\n        ws.array.forEach(element => {});\n        /* Convert array to json*/\n\n        const dataParse = excel.utils.sheet_to_json(ws, {\n          header: 1\n        });\n        return axios.post('api/', {\n          content: [dataParse]\n        }).catch(err => console.log(err));\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"wrap2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Add Past Data\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingLeft: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"(negative for expense and positive for revenue)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      placeholder: \"Enter...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"created_at\",\n      placeholder: \"Enter...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Add Past Data\"))))), /*#__PURE__*/React.createElement(Col, {\n      className: \"wrap2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Import Data\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Import Previous Data Files\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, this.state.rows && /*#__PURE__*/React.createElement(OutTable, {\n      data: this.state.rows,\n      columns: this.state.cols,\n      tableClassName: \"ExcelTable2007\",\n      tableHeaderRowClass: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Import);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/import.js"],"names":["React","axios","connect","Row","Col","excel","ExcelRenderer","OutTable","defaults","baseURL","Import","Component","state","cols","row","workbook","onSubmit","event","name","target","value","amount","username","localStorage","getItem","created_at","post","catch","err","console","log","fileHandler","fileObj","files","resp","setState","rows","readFile","handleUpload","e","preventDefault","f","reader","FileReader","onload","data","result","readedData","read","type","wsname","SheetNames","ws","Sheets","array","forEach","element","dataParse","utils","sheet_to_json","header","content","render","paddingLeft","textAlign","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Row,Col}from 'react-grid-system';\nimport './import.css';\nimport excel from 'xlsx';\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\n\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Import extends React.Component {\nstate = {\n    cols :\"\",\n    row:\"\",\n    workbook:\"\"\n}\n    onSubmit = (event) => {\n        const name = event.target.name.value;\n        const amount = event.target.amount.value;\n        const username = localStorage.getItem(\"username\");\n        const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n        return axios.post('api/', {name: name, username: username,\n                amount: amount, created_at:created_at})\n                .catch(err => console.log(err))\n        }\n\n        fileHandler = (event) => {\n            let fileObj = event.target.files[0];\n            \n            //just pass the fileObj as parameter\n            ExcelRenderer(fileObj, (err, resp) => {\n              if(err){\n                console.log(err);            \n              }\n              else{\n                this.setState({\n                  cols: resp.cols,\n                  rows: resp.rows,\n                    workbook:excel.readFile(fileObj)\n                });\n              }\n            });     \n            // const username = localStorage.getItem(\"username\"); \n            // return this.state.rows.map(element => {\n            //     const name = element[0]\n            //     const amount = element[1]\n            //     const created_at =element[2]\n            \n            // });\n            }\n\n             handleUpload = (e) => {\n                e.preventDefault();\n                let fileObj = e.target.files[0];\n                ExcelRenderer(fileObj, (err, resp) => {\n                    if(err){\n                      console.log(err);            \n                    }\n                    else{\n                      this.setState({\n                        cols: resp.cols,\n                        rows: resp.rows,\n                    \n                      });\n                    }\n                  });     \n    var files = e.target.files, f = files[0];\n    console.log()\n    var reader = new FileReader();\n    reader.onload = function (e) {\n        var data = e.target.result;\n        let readedData = excel.read(data, {type: 'binary'});\n        const wsname = readedData.SheetNames[0];\n        const ws = readedData.Sheets[wsname];\n        ws.array.forEach(element => {\n            \n        });\n        /* Convert array to json*/\n        const dataParse = excel.utils.sheet_to_json(ws, {header:1});\n\n        return axios.post('api/',{\n            content: [dataParse]\n        })\n            .catch(err => console.log(err)) \n    }; \n            \n        }\n  \n      render() {\n        return ( \n            <div>\n                <Row>\n                    {/* col 1 */}\n                    <Col className=\"wrap2\">\n                        {/* Header */}\n                        <Row className =\"header-5\">\n                        <h1 className=\"test-5\">Add Past Data</h1>\n                        </Row>\n                        {/* Add manual */}\n                        <Row >\n                       <div>\n                <form onSubmit={this.onSubmit}>\n                    <br/>\n                    <h4>Category</h4>\n                    <input type=\"text\"  name = \"name\" placeholder=\"Enter...\" />\n                    <br/>\n                    <h4>Amount</h4>\n                    <label style={{paddingLeft:'5%'}}>(negative for expense and positive for revenue)</label>\n                    <input type=\"text\"  name = \"amount\" placeholder=\"Enter...\" />\n                    <br/>\n                    <h4>Date</h4>\n                    <input type=\"date\"  name = \"created_at\" placeholder=\"Enter...\" />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <button>Add Past Data</button>\n                \n                   \n                </form>\n                </div>\n                        </Row>\n                    </Col>\n                    {/* col 2 */}\n                    <Col className=\"wrap2\">\n                     {/* Header */}\n                     <Row className =\"header-5\">\n                        <h1 className=\"test-5\">Import Data</h1>\n                        </Row>\n                        {/* import excel */}\n                        <Row>\n                            <div>\n                        <h4 style= {{textAlign:'center'}}>Import Previous Data Files</h4>\n                        <br/>\n                    <input type=\"file\" onChange={this.handleUpload} />\n                    </div>\n                    \n                    <div>\n                        {this.state.rows && <OutTable data={this.state.rows}\n                         columns ={this.state.cols} \n                         tableClassName= \"ExcelTable2007\"\n                         tableHeaderRowClass=\"heading\"/>}\n                    </div>\n                        </Row>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n      }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Import);\n\n"]},"metadata":{},"sourceType":"module"}