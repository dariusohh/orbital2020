{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js\";\nimport React, { useRef } from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nfunction RegisterForm({\n  onAuth\n}) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const history = useHistory();\n\n  const onSubmit = e => {\n    onAuth(e.username, e.email, e.password, e.confirm);\n    history.push('/expense/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    ref: register({\n      required: \"Username is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }\n  }, errors.username.message), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }\n  }, \"Email is invalid!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Password must contain letters and numbers and have at least 8 characters\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"confirm\",\n    placeholder: \"Confirm Password\",\n    type: \"password\",\n    ref: register({\n      validate: value => value === password.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), errors.confirm && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }\n  }, \"The passwords do not match\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => {\n      dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js"],"names":["React","useRef","actions","connect","useForm","useHistory","RegisterForm","onAuth","register","handleSubmit","errors","watch","password","current","history","onSubmit","e","username","email","confirm","push","required","message","pattern","value","minLength","validate","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as actions from '../../store/actions/auth'\nimport { connect } from 'react-redux'; \nimport './Login.css';\nimport {useForm} from \"react-hook-form\";\nimport { useHistory } from \"react-router\"; \n\nfunction RegisterForm({ onAuth }) {\n  const { register, handleSubmit, errors, watch } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const history = useHistory();\n\n  const onSubmit = e => {\n        onAuth(e.username, \n          e.email,\n          e.password,\n          e.confirm)\n         history.push('/expense/');\n    }\n\n      return (\n        <form onSubmit = {handleSubmit(onSubmit)}>\n          <input type=\"text\" \n          placeholder=\"Username\" \n          name=\"username\" \n          ref={register({required:\"Username is required\"})} />\n          {errors.username && <p>{errors.username.message}</p>}\n        <br/>\n        \n          <input type=\"text\" placeholder=\"Email\" name=\"email\" ref={register({required:\"Email is required\", pattern:{value:/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/g}})}/>\n          {errors.email && <p>Email is invalid!</p>}\n        <br/>\n          <input\n            type = \"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            ref={register({required:true,minLength:8, pattern:/[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/})}\n            />\n            {errors.password && <p>Password must contain letters and numbers and have at least 8 characters</p>}\n          <br/>\n          <br/>\n          <input\n        name=\"confirm\"\n        placeholder = \"Confirm Password\"\n        type=\"password\"\n        ref={register({\n          validate: value =>\n            value === password.current\n        })}\n      />\n      {errors.confirm && <p>The passwords do not match</p>}\n      <br/>\n      <br/>\n      <button type = \"submit\">Sign Up</button>\n        </form>\n      );\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => {\n            dispatch(actions.authSignup(username,email, password1,password2))\n        }\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}