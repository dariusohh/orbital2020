{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Predict.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { RevenueGraph } from './Revenue.js';\nimport { ExpenseGraph } from './Expense.js';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expense: [],\n      prediction: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => axios.get('api/').then(res => {\n      var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n      this.setState({\n        expense: new_res\n      });\n      axios.post('predict/', new_res).then(res => {\n        this.setState({\n          prediction: res.data\n        });\n      });\n    }), 200);\n  }\n\n  render() {\n    console.log(this.state.prediction);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, this.state.prediction.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        marginRight: \"2.5%\",\n        backgroundColor: \"white\",\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Revenue Prediction\"), /*#__PURE__*/React.createElement(RevenueGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.revenue_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        backgroundColor: \"white\",\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ExpenseGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.expense_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Predict);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Predict.js"],"names":["React","axios","connect","RevenueGraph","ExpenseGraph","defaults","baseURL","Predict","Component","state","expense","prediction","componentDidMount","setTimeout","get","then","res","new_res","data","filter","x","username","localStorage","getItem","setState","post","render","console","log","length","textAlign","width","marginRight","backgroundColor","float","revenue_pred","expense_pred","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {RevenueGraph} from './Revenue.js'\nimport {ExpenseGraph} from './Expense.js'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n\n    state = {\n        expense: [],\n        prediction:[],\n    }\n\n    componentDidMount() {\n        setTimeout(() => \n          axios.get('api/')\n          .then(res => {\n              var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"))\n              this.setState({\n                  expense: new_res\n              });\n              axios.post('predict/',new_res).then(res => {\n                  this.setState({prediction:res.data})\n              })\n          }), 200);\n      }\n\n      render() {\n          console.log(this.state.prediction)\n        return ( \n            <div>\n            { this.state.prediction.length === 0 ? \n                <h1 style={{textAlign:\"center\"}}>Loading</h1>\n            : \n                <div>\n                <div style={{width:\"47.5%\",marginRight:\"2.5%\",backgroundColor:\"white\",float:\"left\"}}>\n                    <h2 className='text2'>Revenue Prediction</h2>\n                <RevenueGraph data={this.state.expense} prediction = {this.state.prediction.revenue_pred}/>\n                </div>\n                <div style={{width:\"47.5%\", backgroundColor:\"white\",float:\"left\"}}>\n                <ExpenseGraph data={this.state.expense} prediction = {this.state.prediction.expense_pred}/>\n                </div>\n                </div>\n            }\n            </div>\n        )\n      }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Predict);\n"]},"metadata":{},"sourceType":"module"}