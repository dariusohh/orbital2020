{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/expense.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class Expense extends React.Component {\n  render() {\n    const yearFilter = objdate => {\n      const currdate = new Date();\n      const prevyear = new Date();\n    };\n\n    const total = this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).filter(item => item > 0).reduce((acc, item) => acc += item, 0).toFixed(2);\n    const long = this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).filter(item => item > 0).filter(x => x.name in [\"Payroll\", \"Rent\", \"Taxes\", \"Utilities\"]).reduce((acc, item) => acc += item, 0).toFixed(2);\n    const ylabels = [long, total - long];\n    const data = {\n      labels: [\"Long-term\", \"Short-Term\"],\n      datasets: [{\n        label: \"\",\n        backgroundColor: 'rgba(210, 82, 127, 1)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: ylabels\n      }]\n    };\n    var options = {\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true\n          }\n        }]\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bar, {\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        fontSize: 30,\n        color: 'DarkSlateGray',\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, \"Total Expense : SGD $\", this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).filter(item => item > 0).reduce((acc, item) => acc += item, 0).toFixed(2)));\n  }\n\n}\nexport default Expense;","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/expense.js"],"names":["React","axios","Bar","defaults","baseURL","Expense","Component","render","yearFilter","objdate","currdate","Date","prevyear","total","props","data","map","transaction","amount","num","parseFloat","filter","item","reduce","acc","toFixed","long","x","name","ylabels","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","legend","display","scales","xAxes","gridLines","yAxes","fontSize","color","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {Bar} from 'react-chartjs-2';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\n\nexport class Expense extends React.Component {\n\n   \n    \n    \n  render() {\n\n    const yearFilter = objdate => {\n      const currdate = new Date()\n      const prevyear = new Date()\n    }\n\n    const total =(this.props.data\n        .map(transaction => transaction.amount).map(num => parseFloat(num))\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2))\n\n        const long =(this.props.data\n            .map(transaction => transaction.amount)\n            .map(num => parseFloat(num)).filter(item => item > 0)\n            .filter(x => x.name in [\"Payroll\",\"Rent\",\"Taxes\",\"Utilities\"])\n            .reduce((acc, item) => (acc += item), 0)\n            .toFixed(2))\n        \n        \n        \n    const ylabels = [long, total-long]\n    const data = {\n        labels: [\"Long-term\",\"Short-Term\"],\n        datasets: [\n          {\n            label: \"\",\n            backgroundColor: 'rgba(210, 82, 127, 1)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: ylabels\n          }\n        ]\n      };\n\n      var options = {\n        legend:{display:false},\n        scales:{\n        xAxes:[{gridLines:{display:false}}],\n        yAxes:[{gridLines:{display:true}}]\n        }\n      }\n\n  return (\n    <>\n   <Bar data={data} options={options}></Bar>\n   <text style= {{fontSize:30, color:'DarkSlateGray', textAlign:\"center\"}}>\n    Total Expense : SGD ${(this.props.data\n        .map(transaction => transaction.amount).map(num => parseFloat(num))\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2))}\n   </text>\n</>\n\n    )\n  }\n}\n\n\n  \n\n  export default Expense;"]},"metadata":{},"sourceType":"module"}