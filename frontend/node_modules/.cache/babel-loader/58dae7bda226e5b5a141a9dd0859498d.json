{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Chart from \"react-apexcharts\";\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class ExpenseGraph extends React.Component {\n  render() {\n    const month_expense = {};\n\n    for (var j = 5; j >= 0; j--) {\n      var mthyeardate = new Date(new Date().getFullYear(), new Date().getMonth() - j);\n      var mthyear = mthyeardate.toLocaleDateString().slice(3, 6) + mthyeardate.toLocaleDateString().slice(8, 10);\n      month_expense[mthyear] = 0;\n    }\n\n    for (var k = 1; k < 6; k++) {\n      mthyeardate = new Date(new Date().getFullYear(), new Date().getMonth() + k);\n      mthyear = mthyeardate.toLocaleDateString().slice(3, 6) + mthyeardate.toLocaleDateString().slice(8, 10);\n      month_expense[mthyear] = 0;\n    }\n\n    var month_predictions = {};\n    Object.assign(month_predictions, month_expense);\n    this.props.prediction.forEach(x => {\n      const objyear = x.date.substring(2, 4);\n      const objmth = x.date.substring(5, 7);\n      month_predictions[objmth + \"/\" + objyear] = -x.value;\n    });\n    this.props.data.forEach(x => {\n      const objyear = x.created_at.substring(0, 4);\n      const objmth = x.created_at.substring(5, 7) - 1;\n      const objday = x.created_at.substring(8, 10);\n      const objhour = parseInt(x.created_at.substring(11, 13)) + 8;\n      const objmin = x.created_at.substring(14, 16);\n      const objsec = x.created_at.substring(17, 19);\n      const createddate = new Date(objyear, objmth, objday, objhour, objmin, objsec);\n      const created = createddate.toLocaleDateString().slice(3, 6) + createddate.toLocaleDateString().slice(8, 10);\n      if (parseFloat(x.amount) < 0) month_expense[created] -= parseFloat(x.amount);\n    });\n    const mth_xlabels = Object.keys(month_expense);\n    var mthexpense_label = [];\n    var pred_label = [];\n\n    for (let x of mth_xlabels) {\n      mthexpense_label.push(month_expense[x]);\n      pred_label.push(month_predictions[x]);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(ExpenseGraph);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Expense.js"],"names":["React","axios","connect","Chart","defaults","baseURL","ExpenseGraph","Component","render","month_expense","j","mthyeardate","Date","getFullYear","getMonth","mthyear","toLocaleDateString","slice","k","month_predictions","Object","assign","props","prediction","forEach","x","objyear","date","substring","objmth","value","data","created_at","objday","objhour","parseInt","objmin","objsec","createddate","created","parseFloat","amount","mth_xlabels","keys","mthexpense_label","pred_label","push","mapStateToProps","state","token"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Chart from \"react-apexcharts\";\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport class ExpenseGraph extends React.Component {\n        \n\nrender() {\n    \n\n  const month_expense = {}\n  for (var j = 5; j >= 0; j--) {\n    var mthyeardate = new Date(new Date().getFullYear(),new Date().getMonth() - j)\n    var mthyear = mthyeardate.toLocaleDateString().slice(3,6) + mthyeardate.toLocaleDateString().slice(8,10)\n    month_expense[mthyear] = 0\n  }\n\n  for (var k = 1; k < 6; k++) {\n    mthyeardate = new Date(new Date().getFullYear(),new Date().getMonth() + k)\n    mthyear = mthyeardate.toLocaleDateString().slice(3,6) + mthyeardate.toLocaleDateString().slice(8,10)\n    month_expense[mthyear] = 0\n  }\n\n  var month_predictions = {};\n  Object.assign(month_predictions,month_expense);\n  this.props.prediction.forEach(x => {\n    const objyear = x.date.substring(2,4)\n    const objmth = x.date.substring(5,7)\n    month_predictions[objmth + \"/\" + objyear] = -x.value\n  })\n\n  this.props.data.forEach(x => {\n    const objyear = x.created_at.substring(0,4)\n    const objmth = x.created_at.substring(5,7) - 1\n    const objday = x.created_at.substring(8,10)\n    const objhour = parseInt(x.created_at.substring(11,13)) + 8\n    const objmin = x.created_at.substring(14,16)\n    const objsec = x.created_at.substring(17,19)\n    const createddate = new Date(objyear,objmth,objday, objhour, objmin, objsec)\n    const created = createddate.toLocaleDateString().slice(3,6) + createddate.toLocaleDateString().slice(8,10)\n      if (parseFloat(x.amount) < 0)\n      month_expense[created] -= parseFloat(x.amount)\n  })\n\n  const mth_xlabels = Object.keys(month_expense)\n  var mthexpense_label = []\n  var pred_label = []\n  for (let x of mth_xlabels) {\n    mthexpense_label.push(month_expense[x])\n    pred_label.push(month_predictions[x])\n  }\n\n\n}\n\n}\n\nconst mapStateToProps = state => {\n  return {\n      token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(ExpenseGraph);"]},"metadata":{},"sourceType":"module"}