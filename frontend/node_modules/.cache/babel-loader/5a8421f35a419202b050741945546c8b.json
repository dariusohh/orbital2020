{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Visual/barR.js\";\nimport React from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class BarGraph2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expense: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => axios.get('api/').then(res => {\n      const new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n      this.setState({\n        expense: new_res\n      });\n    }), 200);\n  }\n\n  render() {\n    var grouping = {};\n    this.props.data.filter(item => item.amount > 0).forEach(x => {\n      if (x.name in grouping) {\n        grouping[x.name] += parseFloat(x.amount);\n      } else {\n        grouping[x.name] = parseFloat(x.amount);\n      }\n    });\n    const xlabels = Object.keys(grouping).sort();\n    var ylabels = [];\n\n    for (let x of xlabels) {\n      ylabels.push(grouping[x]);\n    }\n\n    const data = {\n      labels: xlabels,\n      datasets: [{\n        label: 'Revenue',\n        backgroundColor: 'rgba(54, 215, 183, 1)',\n        borderColor: 'rgba(71, 181, 209, 0.84)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: ylabels\n      }]\n    };\n    var options = {\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: true\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: false\n          }\n        }]\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \" Revenue Breakdown\"), /*#__PURE__*/React.createElement(HorizontalBar, {\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(BarGraph2);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Visual/barR.js"],"names":["React","HorizontalBar","Link","axios","connect","defaults","baseURL","BarGraph2","Component","state","expense","componentDidMount","setTimeout","get","then","res","new_res","data","filter","x","username","localStorage","getItem","setState","render","grouping","props","item","amount","forEach","name","parseFloat","xlabels","Object","keys","sort","ylabels","push","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","legend","display","scales","xAxes","gridLines","yAxes","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport {Link } from \"react-router-dom\"; \nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport class BarGraph2 extends React.Component  { \n\n  state = {\n    expense: []\n}\n\n\ncomponentDidMount() {\n    setTimeout(() => \n      axios.get('api/')\n      .then(res => {\n          const new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n          this.setState({\n              expense: new_res\n          });\n      }), 200);\n  }\n\n  render () {\n  \n    var grouping = {};\n    this.props.data.filter(item => item.amount > 0).forEach(x => {\n      if (x.name in grouping) {\n        grouping[x.name] += parseFloat(x.amount)\n      } else {\n        grouping[x.name] = parseFloat(x.amount)\n      }\n    })\n    const xlabels = Object.keys(grouping).sort()\n    var ylabels = []\n    for (let x of xlabels) {\n      ylabels.push(grouping[x])\n    }\n\n    const data = {\n        labels: xlabels,\n        datasets: [\n          {\n            label: 'Revenue',\n            backgroundColor: 'rgba(54, 215, 183, 1)',\n            borderColor: 'rgba(71, 181, 209, 0.84)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: ylabels\n          }\n        ]\n      };\n\n      var options = {\n        legend:{display:false},\n        scales:{\n        xAxes:[{gridLines:{display:true}}],\n        yAxes:[{gridLines:{display:false}}]\n        }\n      }\n\nreturn (\n  <div>\n    <h2 className='text2'> Revenue Breakdown</h2>\n    <HorizontalBar data={data} options={options}/>\n  </div>\n)\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n      token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(BarGraph2);\n\n\n"]},"metadata":{},"sourceType":"module"}