{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/import.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-grid-system';\nimport './import.css';\nimport excel from 'xlsx';\nimport { ExcelRenderer, OutTable } from 'react-excel-renderer';\nimport format from './format.png';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Import extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cols: \"\",\n      row: \"\",\n      workbook: \"\"\n    };\n    this.expenseCat = [\"Entertainment\", \"Equipment & Furniture\", \"Marketing\", \"Office Supplies\", \"Payroll\", \"Rent\", \"Software\", \"Taxes\", \"Travel\", \"Utilities\", \"Others\"];\n\n    this.onSubmit = event => {\n      var name = event.target.name.value;\n      const amount = event.target.amount.value;\n      const username = localStorage.getItem(\"username\");\n      const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n\n      if (amount < 0 && !this.expenseCat.includes(name)) {\n        name = \"Others\";\n      }\n\n      return axios.post('api/', {\n        name: name,\n        username: username,\n        amount: amount,\n        created_at: created_at\n      }).catch(err => console.log(err));\n    };\n\n    this.fileHandler = event => {\n      let fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows,\n            workbook: excel.readFile(fileObj)\n          });\n        }\n      }); // const username = localStorage.getItem(\"username\"); \n      // return this.state.rows.map(element => {\n      //     const name = element[0]\n      //     const amount = element[1]\n      //     const created_at =element[2]\n      // });\n    };\n\n    this.handleUpload = e => {\n      e.preventDefault();\n      let fileObj = e.target.files[0];\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n          var trans = [];\n          delete resp.rows[0];\n\n          for (var key in resp.rows) {\n            var date = new Date(Math.round((resp.rows[key][2] - 25569) * 86400 * 1000));\n            var name = resp.rows[key][0];\n            var amount = resp.rows[key][1];\n\n            if (amount < 0 && !this.expenseCat.includes(name)) {\n              name = \"Others\";\n            }\n\n            trans.push({\n              name: name,\n              amount: amount,\n              created_at: date.toISOString(),\n              username: localStorage.getItem(\"username\")\n            });\n          }\n\n          trans.forEach(x => {\n            console.log(x);\n            axios.post('api/', x).catch(err => console.log(err));\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"wrap2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Add Past Data\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingLeft: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"(negative for expense and positive for revenue)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      placeholder: \"Enter...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"created_at\",\n      placeholder: \"Enter...\",\n      max: new Date(new Date().getTime() + 8 * 60 * 60 * 1000).toISOString().substring(0, 10),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Add Past Data\"))))), /*#__PURE__*/React.createElement(Col, {\n      className: \"wrap2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \"Import Data\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Import Previous Data Files\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, this.state.rows && /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Data imported successfully!\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"format\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"test-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Excel format\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: format,\n      alt: \"format\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 35\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Import);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/import.js"],"names":["React","axios","connect","Row","Col","excel","ExcelRenderer","OutTable","format","defaults","baseURL","Import","Component","state","cols","row","workbook","expenseCat","onSubmit","event","name","target","value","amount","username","localStorage","getItem","created_at","includes","post","catch","err","console","log","fileHandler","fileObj","files","resp","setState","rows","readFile","handleUpload","e","preventDefault","trans","key","date","Date","Math","round","push","toISOString","forEach","x","render","paddingLeft","getTime","substring","textAlign","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Row,Col}from 'react-grid-system';\nimport './import.css';\nimport excel from 'xlsx';\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\nimport format from './format.png'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Import extends React.Component {\nstate = {\n    cols :\"\",\n    row:\"\",\n    workbook:\"\"\n}\n\nexpenseCat = [\"Entertainment\",\"Equipment & Furniture\",\"Marketing\",\n    \"Office Supplies\",\"Payroll\",\"Rent\",\"Software\",\"Taxes\",\"Travel\",\n    \"Utilities\",\"Others\"]\n\n    onSubmit = (event) => {\n        var name = event.target.name.value;\n        const amount = event.target.amount.value;\n        const username = localStorage.getItem(\"username\");\n        const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n        if (amount < 0 && !this.expenseCat.includes(name)) {\n          name = \"Others\"\n        }\n        \n        return axios.post('api/', {name: name, username: username,\n                amount: amount, created_at:created_at})\n                .catch(err => console.log(err))\n        }\n\n        fileHandler = (event) => {\n            let fileObj = event.target.files[0];\n            \n            //just pass the fileObj as parameter\n            ExcelRenderer(fileObj, (err, resp) => {\n              if(err){\n                console.log(err);            \n              }\n              else{\n                this.setState({\n                  cols: resp.cols,\n                  rows: resp.rows,\n                    workbook:excel.readFile(fileObj)\n                });\n              }\n            });     \n            // const username = localStorage.getItem(\"username\"); \n            // return this.state.rows.map(element => {\n            //     const name = element[0]\n            //     const amount = element[1]\n            //     const created_at =element[2]\n            \n            // });\n            }\n\n             handleUpload = (e) => {\n                e.preventDefault();\n                let fileObj = e.target.files[0];\n                ExcelRenderer(fileObj, (err, resp) => {\n                    if(err){\n                      console.log(err);            \n                    }\n                    else{\n                      this.setState({\n                        cols: resp.cols,\n                        rows: resp.rows,\n                    \n                      });\n                      var trans = []\n                    delete resp.rows[0]\n                     for (var key in resp.rows) {\n                       var date = new Date(Math.round((resp.rows[key][2]- 25569)*86400*1000))\n                       var name = resp.rows[key][0]\n                       var amount = resp.rows[key][1]\n                       if (amount < 0 && !this.expenseCat.includes(name)) {\n                        name = \"Others\"\n                      }\n                       trans.push({name:name,\n                      amount:amount,\n                      created_at:date.toISOString(),\n                      username:localStorage.getItem(\"username\")})\n                    }\n                    trans.forEach(x => {\n                      console.log(x)\n                      axios.post('api/', x)\n                    .catch(err => console.log(err))})\n                  }});     \n    }; \n            \n    \n  \n      render() {\n        return ( \n            <div>\n                <Row>\n                    {/* col 1 */}\n                    <Col className=\"wrap2\">\n                        {/* Header */}\n                        <Row className =\"header-5\">\n                        <h1 className=\"test-5\">Add Past Data</h1>\n                        </Row>\n                        {/* Add manual */}\n                        <Row >\n                       <div className=\"content\">\n                <form onSubmit={this.onSubmit}>\n                    <br/>\n                    <h4>Category</h4>\n                    <input type=\"text\"  name = \"name\" placeholder=\"Enter...\" />\n                    <br/>\n                    <h4>Amount</h4>\n                    <label style={{paddingLeft:'5%'}}>(negative for expense and positive for revenue)</label>\n                    <input type=\"text\"  name = \"amount\" placeholder=\"Enter...\" />\n                    <br/>\n                    <h4>Date</h4>\n                    <input type=\"date\"  name = \"created_at\" placeholder=\"Enter...\" \n                    max = {new Date(new Date().getTime() + 8*60*60*1000).toISOString().substring(0,10)}\n                    />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <button>Add Past Data</button>\n                \n                   \n                </form>\n                </div>\n                        </Row>\n                    </Col>\n                    {/* col 2 */}\n                    <Col className=\"wrap2\">\n                     {/* Header */}\n                     <Row className =\"header-5\">\n                        <h1 className=\"test-5\">Import Data</h1>\n                        </Row>\n                        {/* import excel */}\n                        <Row>\n                            <div className=\"content\">\n                        <h4 style= {{textAlign:'center'}}>Import Previous Data Files</h4>\n                        <br/>\n                    <input type=\"file\" onChange={this.handleUpload} />\n                    </div>\n                    \n                    <div className=\"content\">\n                        {this.state.rows && \n                        <h1 className=\"test-5\"\n                        style= {{textAlign:'center'}}>Data imported successfully!</h1>}\n                        \n                    </div>\n                        </Row>\n                        <div className = \"format\">\n                        <h1 className=\"test-5\">Excel format</h1>\n                                  <img \n                  src= {format}\n                  alt=\"format\"\n                  />\n                  </div>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n      }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Import);\n\n"]},"metadata":{},"sourceType":"module"}