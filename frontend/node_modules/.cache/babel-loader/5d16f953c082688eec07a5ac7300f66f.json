{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Predict.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { RevenueGraph } from './Revenue.js';\nimport { ExpenseGraph } from './Expense.js';\nimport { ProfitGraph } from './Profit.js';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expense: [],\n      prediction: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => axios.get('api/').then(res => {\n      var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n      this.setState({\n        expense: new_res\n      });\n      axios.post('predict/', new_res).then(res => {\n        this.setState({\n          prediction: res.data\n        });\n      });\n    }), 200);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, this.state.prediction.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        marginBottom: \"5%\",\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Profit Prediction\"), /*#__PURE__*/React.createElement(ProfitGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        marginRight: \"2.5%\",\n        backgroundColor: \"white\",\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Revenue Prediction\"), /*#__PURE__*/React.createElement(RevenueGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.revenue_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        marginLeft: \"2.5%\",\n        backgroundColor: \"white\",\n        float: \"left\",\n        marginBottom: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Expense Prediction\"), /*#__PURE__*/React.createElement(ExpenseGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.expense_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Predict);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Predict.js"],"names":["React","axios","connect","RevenueGraph","ExpenseGraph","ProfitGraph","defaults","baseURL","Predict","Component","state","expense","prediction","componentDidMount","setTimeout","get","then","res","new_res","data","filter","x","username","localStorage","getItem","setState","post","render","length","textAlign","backgroundColor","marginBottom","marginTop","width","marginRight","float","revenue_pred","marginLeft","expense_pred","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {RevenueGraph} from './Revenue.js'\nimport {ExpenseGraph} from './Expense.js'\nimport {ProfitGraph} from './Profit.js'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n\n    state = {\n        expense: [],\n        prediction:[],\n    }\n\n    componentDidMount() {\n        setTimeout(() => \n          axios.get('api/')\n          .then(res => {\n              var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"))\n              this.setState({\n                  expense: new_res\n              });\n              axios.post('predict/',new_res).then(res => {\n                  this.setState({prediction:res.data})\n              })\n          }), 200);\n      }\n\n      render() {\n        return ( \n            <div>\n            { this.state.prediction.length === 0 ? \n                <h1 style={{textAlign:\"center\"}}>Loading</h1>\n            : \n                <div>   \n                <div style={{backgroundColor:\"white\", marginBottom:\"5%\", marginTop:\"3%\"}}>\n                    <h2 className='text2'>Profit Prediction</h2>\n                    <ProfitGraph data = {this.state.expense} prediction = {this.state.prediction}/>\n                </div>\n                <div style={{width:\"47.5%\",marginRight:\"2.5%\",backgroundColor:\"white\",float:\"left\"}}>\n                    <h2 className='text2'>Revenue Prediction</h2>\n                <RevenueGraph data={this.state.expense} prediction = {this.state.prediction.revenue_pred}/>\n                </div>\n                <div style={{width:\"47.5%\",marginLeft:\"2.5%\",backgroundColor:\"white\",float:\"left\",marginBottom:\"5%\"}}>\n                    <h2 className='text2'>Expense Prediction</h2>\n                <ExpenseGraph data={this.state.expense} prediction = {this.state.prediction.expense_pred}/>\n                </div>\n                </div>\n            }\n            </div>\n        )\n      }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Predict);\n"]},"metadata":{},"sourceType":"module"}