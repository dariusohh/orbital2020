{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Fake_Predict.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { RevenueGraph } from './Revenue.js';\nimport { ExpenseGraph } from './Expense.js';\nimport { ProfitGraph } from './Profit.js';\nimport CircleLoader from \"react-spinners/ClipLoader\";\nimport Dialog from '@material-ui/core/Dialog';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expense: [],\n      prediction: {\n        revenue_pred: [{\n          date: \"2020-01\",\n          value: 400\n        }, {\n          date: \"2020-02\",\n          value: 800\n        }, {\n          date: \"2020-03\",\n          value: 1300\n        }, {\n          date: \"2020-04\",\n          value: 2400\n        }, {\n          date: \"2020-05\",\n          value: 3400\n        }, {\n          date: \"2020-06\",\n          value: 6000\n        }, {\n          date: \"2020-07\",\n          value: 8000\n        }, {\n          date: \"2020-08\",\n          value: 11000\n        }, {\n          date: \"2020-09\",\n          value: 8000\n        }, {\n          date: \"2020-10\",\n          value: 10000\n        }, {\n          date: \"2020-11\",\n          value: 13000\n        }, {\n          date: \"2020-12\",\n          value: 15000\n        }, {\n          date: \"2021-01\",\n          value: 16000\n        }, {\n          date: \"2021-02\",\n          value: 18000\n        }, {\n          date: \"2021-03\",\n          value: 20000\n        }, {\n          date: \"2021-04\",\n          value: 24000\n        }],\n        expense_pred: [{\n          date: \"2020-01\",\n          value: -100\n        }, {\n          date: \"2020-02\",\n          value: -300\n        }, {\n          date: \"2020-03\",\n          value: -600\n        }, {\n          date: \"2020-04\",\n          value: -1000\n        }, {\n          date: \"2020-05\",\n          value: -1500\n        }, {\n          date: \"2020-06\",\n          value: -2000\n        }, {\n          date: \"2020-07\",\n          value: -3000\n        }, {\n          date: \"2020-08\",\n          value: -5000\n        }, {\n          date: \"2020-09\",\n          value: -3000\n        }, {\n          date: \"2020-10\",\n          value: -5000\n        }, {\n          date: \"2020-11\",\n          value: -6000\n        }, {\n          date: \"2020-12\",\n          value: -7000\n        }, {\n          date: \"2021-01\",\n          value: -7500\n        }, {\n          date: \"2021-02\",\n          value: -9000\n        }, {\n          date: \"2021-03\",\n          value: -11000\n        }, {\n          date: \"2021-04\",\n          value: -12000\n        }]\n      },\n      popup: true\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => axios.get('api/').then(res => {\n      var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n      this.setState({\n        expense: new_res\n      });\n    }));\n  }\n\n  handleClose() {\n    this.setState({\n      popup: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.popup,\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"As the heroku hosting service is very slow and times out after 30 seconds, we are unable to show the actual predictions of our machine learning model. To find out more about the model and try it yourself, we have included a link to the Jupyter Notebook in our ReadMe. The predicted data shown here is artificial. \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClose(),\n      style: {\n        padding: \"10px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Prediction Analysis\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \" \"), this.state.prediction.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Loading\"), /*#__PURE__*/React.createElement(CircleLoader, {\n      css: {\n        marginLeft: \"49%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        marginBottom: \"3%\",\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Profit Prediction\"), /*#__PURE__*/React.createElement(ProfitGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        marginRight: \"2.5%\",\n        backgroundColor: \"white\",\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Revenue Prediction\"), /*#__PURE__*/React.createElement(RevenueGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.revenue_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"47.5%\",\n        marginLeft: \"2.5%\",\n        backgroundColor: \"white\",\n        float: \"left\",\n        marginBottom: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Expense Prediction\"), /*#__PURE__*/React.createElement(ExpenseGraph, {\n      data: this.state.expense,\n      prediction: this.state.prediction.expense_pred,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Predict);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Prediction/Fake_Predict.js"],"names":["React","axios","connect","RevenueGraph","ExpenseGraph","ProfitGraph","CircleLoader","Dialog","defaults","baseURL","Predict","Component","state","expense","prediction","revenue_pred","date","value","expense_pred","popup","componentDidMount","setTimeout","get","then","res","new_res","data","filter","x","username","localStorage","getItem","setState","handleClose","render","padding","length","textAlign","marginTop","marginLeft","backgroundColor","marginBottom","width","marginRight","float","mapStateToProps","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEAN,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;;AAEA,MAAMC,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,UAAU,EAAC;AAACC,QAAAA,YAAY,EAAC,CACrB;AAACC,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SADqB,EAErB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAFqB,EAGrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAHqB,EAIrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAJqB,EAKrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SALqB,EAMrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SANqB,EAOrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAPqB,EAQrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SARqB,EASrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SATqB,EAUrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAVqB,EAWrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAXqB,EAYrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAZqB,EAarB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAbqB,EAcrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAdqB,EAerB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAfqB,EAgBrB;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAhBqB,CAAd;AAoBXC,QAAAA,YAAY,EAAC,CACT;AAACF,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SADS,EAET;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAFS,EAGT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAHS,EAIT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAJS,EAKT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SALS,EAMT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SANS,EAOT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAPS,EAQT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SARS,EAST;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SATS,EAUT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAVS,EAWT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAXS,EAYT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAZS,EAaT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAbS,EAcT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAdS,EAeT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAfS,EAgBT;AAACD,UAAAA,IAAI,EAAC,SAAN;AAAgBC,UAAAA,KAAK,EAAC,CAAC;AAAvB,SAhBS;AApBF,OAFP;AA0CRE,MAAAA,KAAK,EAAC;AA1CE,KAF0B;AAAA;;AA+ClCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,UAAU,CAAC,MACTpB,KAAK,CAACqB,GAAN,CAAU,MAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACT,UAAIC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApC,CAAd;AACA,WAAKC,QAAL,CAAc;AACVnB,QAAAA,OAAO,EAAEY;AADC,OAAd;AAEI,KALR,CADQ,CAAV;AAOD;;AAEDQ,EAAAA,WAAW,GAAG;AACZ,SAAKD,QAAL,CAAc;AAACb,MAAAA,KAAK,EAAC;AAAP,KAAd;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWO,KAAzB;AAAgC,MAAA,QAAQ,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mUADJ,eAKA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKc,WAAL,EAAvB;AAA2C,MAAA,KAAK,EAAE;AAACE,QAAAA,OAAO,EAAC;AAAT,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALA,CADJ,eAQI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,eASI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,EAUE,KAAKvB,KAAL,CAAWE,UAAX,CAAsBsB,MAAtB,KAAiC,CAAjC,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,QAAX;AAAoBC,QAAAA,SAAS,EAAC;AAA9B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,OAAjB;AAA0BC,QAAAA,YAAY,EAAC,IAAvC;AAA6CH,QAAAA,SAAS,EAAC;AAAvD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAI,KAAK1B,KAAL,CAAWC,OAAhC;AAAyC,MAAA,UAAU,EAAI,KAAKD,KAAL,CAAWE,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,eAKA;AAAK,MAAA,KAAK,EAAE;AAAC4B,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,WAAW,EAAC,MAA3B;AAAkCH,QAAAA,eAAe,EAAC,OAAlD;AAA0DI,QAAAA,KAAK,EAAC;AAAhE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWC,OAA/B;AAAwC,MAAA,UAAU,EAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CALA,eASA;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAC,OAAP;AAAeH,QAAAA,UAAU,EAAC,MAA1B;AAAiCC,QAAAA,eAAe,EAAC,OAAjD;AAAyDI,QAAAA,KAAK,EAAC,MAA/D;AAAsEH,QAAAA,YAAY,EAAC;AAAnF,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,OAA/B;AAAwC,MAAA,UAAU,EAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBI,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CATA,CAhBJ,CADJ;AAkCD;;AAhG+B;;AAmGtC,MAAM2B,eAAe,GAAGjC,KAAK,IAAI;AAC7B,SAAO;AACHkC,IAAAA,KAAK,EAAElC,KAAK,CAACkC;AADV,GAAP;AAGD,CAJH;;AAME,eAAe5C,OAAO,CAAC2C,eAAD,CAAP,CAAyBnC,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {RevenueGraph} from './Revenue.js'\nimport {ExpenseGraph} from './Expense.js'\nimport {ProfitGraph} from './Profit.js'\nimport CircleLoader from \"react-spinners/ClipLoader\"\nimport Dialog from '@material-ui/core/Dialog';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Predict extends React.Component {\n\n    state = {\n        expense: [],\n        prediction:{revenue_pred:[\n            {date:\"2020-01\",value:400},\n            {date:\"2020-02\",value:800},\n            {date:\"2020-03\",value:1300},\n            {date:\"2020-04\",value:2400},\n            {date:\"2020-05\",value:3400},\n            {date:\"2020-06\",value:6000},\n            {date:\"2020-07\",value:8000},\n            {date:\"2020-08\",value:11000},\n            {date:\"2020-09\",value:8000},\n            {date:\"2020-10\",value:10000},\n            {date:\"2020-11\",value:13000},\n            {date:\"2020-12\",value:15000},\n            {date:\"2021-01\",value:16000},\n            {date:\"2021-02\",value:18000},\n            {date:\"2021-03\",value:20000},\n            {date:\"2021-04\",value:24000},\n        \n        ],\n\n        expense_pred:[\n            {date:\"2020-01\",value:-100},\n            {date:\"2020-02\",value:-300},\n            {date:\"2020-03\",value:-600},\n            {date:\"2020-04\",value:-1000},\n            {date:\"2020-05\",value:-1500},\n            {date:\"2020-06\",value:-2000},\n            {date:\"2020-07\",value:-3000},\n            {date:\"2020-08\",value:-5000},\n            {date:\"2020-09\",value:-3000},\n            {date:\"2020-10\",value:-5000},\n            {date:\"2020-11\",value:-6000},\n            {date:\"2020-12\",value:-7000},\n            {date:\"2021-01\",value:-7500},\n            {date:\"2021-02\",value:-9000},\n            {date:\"2021-03\",value:-11000},\n            {date:\"2021-04\",value:-12000},\n        \n        ]\n    },\n    popup:true\n    }\n\n    componentDidMount() {\n        setTimeout(() => \n          axios.get('api/')\n          .then(res => {\n              var new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"))\n              this.setState({\n                  expense: new_res\n              });}))\n      }\n\n      handleClose() {\n        this.setState({popup:false})\n      }\n\n      render() {\n        return ( \n            <div>\n                <Dialog open={this.state.popup} maxWidth='lg'> \n                    <h2>As the heroku hosting service is very slow and times out after 30 seconds, \n                    we are unable to show the actual predictions of our machine learning model. To \n                    find out more about the model and try it yourself, we have included a link to \n                    the Jupyter Notebook in our ReadMe. The predicted data shown here is artificial. </h2> \n                <button onClick={() => this.handleClose()} style={{padding:\"10px 5px\"}}>Close</button>\n                </Dialog>\n                <h1 className='text'>Prediction Analysis</h1>\n                <h2 className='line'> </h2>\n            { this.state.prediction.length === 0 ?\n                <div>\n                <h1 style={{textAlign:\"center\",marginTop:\"15%\"}}>Loading</h1>\n                <CircleLoader css={{marginLeft:\"49%\"}}/>\n                </div>\n            : \n                <div>   \n                <div style={{backgroundColor:\"white\", marginBottom:\"3%\", marginTop:\"3%\"}}>\n                    <h2 className='text2'>Profit Prediction</h2>\n                    <ProfitGraph data = {this.state.expense} prediction = {this.state.prediction}/>\n                </div>\n                <div style={{width:\"47.5%\",marginRight:\"2.5%\",backgroundColor:\"white\",float:\"left\"}}>\n                    <h2 className='text2'>Revenue Prediction</h2>\n                <RevenueGraph data={this.state.expense} prediction = {this.state.prediction.revenue_pred}/>\n                </div>\n                <div style={{width:\"47.5%\",marginLeft:\"2.5%\",backgroundColor:\"white\",float:\"left\",marginBottom:\"5%\"}}>\n                    <h2 className='text2'>Expense Prediction</h2>\n                <ExpenseGraph data={this.state.expense} prediction = {this.state.prediction.expense_pred}/>\n                </div>\n                </div>\n            }\n            </div>\n        )\n      }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Predict);"]},"metadata":{},"sourceType":"module"}