{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('username');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nconst checkAuthTimeout = expirationDate => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    returnaxios.post('rest_auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    return axios.post('rest_auth/register/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/store/actions/auth.js"],"names":["actionTypes","axios","defaults","baseURL","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationDate","dispatch","setTimeout","authLogin","username","password","returnaxios","post","then","res","data","key","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username');\n    return {\n        type:actionTypes.AUTH_LOGOUT\n    }\n}\n\nconst checkAuthTimeout = expirationDate => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationDate * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        returnaxios.post('rest_auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token',token);\n            localStorage.setItem('expirationDate',expirationDate);\n            localStorage.setItem('username',username);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n    })\n}   \n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        return axios.post('rest_auth/register/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n            localStorage.setItem('token',token);\n            localStorage.setItem('expirationDate',expirationDate);\n            localStorage.setItem('username',username);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n    })\n}   \n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}