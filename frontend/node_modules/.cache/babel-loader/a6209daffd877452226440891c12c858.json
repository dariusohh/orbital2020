{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/Exel.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'react-grid-system';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Popup from \"reactjs-popup\";\nimport format from './format.png';\nimport { ExcelRenderer } from 'react-excel-renderer';\nimport { connect } from 'react-redux';\nimport excel from 'xlsx';\nimport { Alert } from '@material-ui/lab';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './import.css';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Exel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cols: \"\",\n      row: \"\",\n      workbook: \"\"\n    };\n    this.expenseCat = [\"Entertainment\", \"Equipment & Furniture\", \"Marketing\", \"Office Supplies\", \"Payroll\", \"Rent\", \"Software\", \"Taxes\", \"Travel\", \"Utilities\", \"Others\"];\n\n    this.onSubmit = event => {\n      var name = event.target.name.value;\n      const amount = event.target.amount.value;\n      const username = localStorage.getItem(\"username\");\n      const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n\n      if (amount < 0 && !this.expenseCat.includes(name)) {\n        name = \"Others\";\n      }\n\n      return axios.post('api/', {\n        name: name,\n        username: username,\n        amount: amount,\n        created_at: created_at\n      }).catch(err => console.log(err));\n    };\n\n    this.fileHandler = event => {\n      let fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows,\n            workbook: excel.readFile(fileObj)\n          });\n        }\n      }); // const username = localStorage.getItem(\"username\"); \n      // return this.state.rows.map(element => {\n      //     const name = element[0]\n      //     const amount = element[1]\n      //     const created_at =element[2]\n      // });\n    };\n\n    this.handleUpload = e => {\n      e.preventDefault();\n      let fileObj = e.target.files[0];\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n          var trans = [];\n          delete resp.rows[0];\n\n          for (var key in resp.rows) {\n            var date = new Date(Math.round((resp.rows[key][2] - 25569) * 86400 * 1000));\n            var name = resp.rows[key][0];\n            var amount = resp.rows[key][1];\n\n            if (amount < 0 && !this.expenseCat.includes(name)) {\n              name = \"Others\";\n            }\n\n            trans.push({\n              name: name,\n              amount: amount,\n              created_at: date.toISOString(),\n              username: localStorage.getItem(\"username\")\n            });\n          }\n\n          trans.forEach(x => {\n            console.log(x);\n            axios.post('api/', x).catch(err => console.log(err));\n          });\n        }\n      });\n    };\n\n    this.handleclose = e => {\n      this.setState({\n        rows: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"EXCEL IMPORT\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"custom-file-input\",\n      type: \"file\",\n      onChange: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, \" ONLY EXCEL FILES ARE ALLOWED\")), /*#__PURE__*/React.createElement(Col, {\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      trigger: /*#__PURE__*/React.createElement(HelpIcon, {\n        position: \"right\",\n        style: {\n          fontSize: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }),\n      modal: true,\n      closeOnDocumentClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"File Excel Format\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: format,\n      alt: \"format\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }))))), this.state.rows && /*#__PURE__*/React.createElement(Alert, {\n      elevation: 6,\n      variant: \"filled\",\n      onClick: this.handleClose,\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 18\n      }\n    }, \"Sucessful Import\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Exel);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Expense/Exel.js"],"names":["React","axios","Row","Col","HelpIcon","Popup","format","ExcelRenderer","connect","excel","Alert","InputLabel","defaults","baseURL","Exel","Component","state","cols","row","workbook","expenseCat","onSubmit","event","name","target","value","amount","username","localStorage","getItem","created_at","includes","post","catch","err","console","log","fileHandler","fileObj","files","resp","setState","rows","readFile","handleUpload","e","preventDefault","trans","key","date","Date","Math","round","push","toISOString","forEach","x","handleclose","render","color","fontSize","handleClose","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Row,Col}from 'react-grid-system';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Popup from \"reactjs-popup\";\nimport format from './format.png';\nimport {ExcelRenderer} from 'react-excel-renderer';\nimport { connect } from 'react-redux';\nimport excel from 'xlsx';\nimport { Alert } from '@material-ui/lab';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './import.css';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nclass Exel extends React.Component {\n  state = {\n    cols :\"\",\n    row:\"\",\n    workbook:\"\"\n}\n\nexpenseCat = [\"Entertainment\",\"Equipment & Furniture\",\"Marketing\",\n    \"Office Supplies\",\"Payroll\",\"Rent\",\"Software\",\"Taxes\",\"Travel\",\n    \"Utilities\",\"Others\"]\n\n    onSubmit = (event) => {\n        var name = event.target.name.value;\n        const amount = event.target.amount.value;\n        const username = localStorage.getItem(\"username\");\n        const created_at = event.target.created_at.value + \"T00:00:00.00000Z\";\n        if (amount < 0 && !this.expenseCat.includes(name)) {\n          name = \"Others\"\n        }\n        \n        return axios.post('api/', {name: name, username: username,\n                amount: amount, created_at:created_at})\n                .catch(err => console.log(err))\n        }\n\n        fileHandler = (event) => {\n            let fileObj = event.target.files[0];\n            \n            //just pass the fileObj as parameter\n            ExcelRenderer(fileObj, (err, resp) => {\n              if(err){\n                console.log(err);            \n              }\n              else{\n                this.setState({\n                  cols: resp.cols,\n                  rows: resp.rows,\n                    workbook:excel.readFile(fileObj)\n                });\n              }\n            });     \n            // const username = localStorage.getItem(\"username\"); \n            // return this.state.rows.map(element => {\n            //     const name = element[0]\n            //     const amount = element[1]\n            //     const created_at =element[2]\n            \n            // });\n            }\n\n             handleUpload = (e) => {\n                e.preventDefault();\n                let fileObj = e.target.files[0];\n                ExcelRenderer(fileObj, (err, resp) => {\n                    if(err){\n                      console.log(err);            \n                    }\n                    else{\n                      this.setState({\n                        cols: resp.cols,\n                        rows: resp.rows,\n                    \n                      });\n                      var trans = []\n                    delete resp.rows[0]\n                     for (var key in resp.rows) {\n                      var date = new Date(Math.round((resp.rows[key][2]- 25569)*86400*1000))\n                       var name = resp.rows[key][0]\n                       var amount = resp.rows[key][1]\n                       if (amount < 0 && !this.expenseCat.includes(name)) {\n                        name = \"Others\"\n                      }\n                       trans.push({name:name,\n                      amount:amount,\n                      created_at:date.toISOString(),\n                      username:localStorage.getItem(\"username\")})\n                    }\n                    trans.forEach(x => {\n                      console.log(x)\n                      axios.post('api/', x)\n                    .catch(err => console.log(err))})\n                  }});     \n    }; \n            handleclose =e =>{\n                this.setState({\n                  rows:''\n                })\n            }\n      \n          render() {\n            return ( \n               <>\n                <h3 style={{color:'grey'}}>EXCEL IMPORT</h3>\n                <br/>\n                <Row>\n                <Col sm={11}>       \n          \n                    <br/>\n                    <br/>\n                    <input className=\"custom-file-input\" type=\"file\" onChange={this.handleUpload} />\n                 \n                \n               \n                  <br/>\n                  <p style ={{ color:'grey'}}> ONLY EXCEL FILES ARE ALLOWED</p>\n                  \n                  </Col>\n                <Col sm={1}>\n                     \n              <Popup trigger= {\n              <HelpIcon position=\"right\" style={{ fontSize: \"30px\"}}/>}\n            \n              modal closeOnDocumentClick>\n                <div>\n                <InputLabel >File Excel Format</InputLabel>\n                <img \n                  src= {format}\n                  alt=\"format\"\n                  />\n\n                </div>\n\n                </Popup>\n\n                </Col>\n\n              </Row>\n              {this.state.rows && \n                 <Alert elevation={6} variant=\"filled\"  onClick={this.handleClose} severity=\"success\">\n                  Sucessful Import\n                </Alert >\n                        }\n\n\n               </>\n            )\n          }\n    }\n    \n    const mapStateToProps = state => {\n        return {\n            token: state.token\n        }\n      }\n      \n      export default connect(mapStateToProps)(Exel);\n    \n    "]},"metadata":{},"sourceType":"module"}