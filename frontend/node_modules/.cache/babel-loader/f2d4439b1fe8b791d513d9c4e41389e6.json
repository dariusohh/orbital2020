{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/predict.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Chart from \"react-apexcharts\";\nimport { Line } from 'react-chartjs-2';\nimport Dialog from '@material-ui/core/Dialog';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class Prediction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      popup: true\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      popup: false\n    });\n  }\n\n  render() {\n    const data = {\n      labels: [\"2020-01\", \"2020-02\", \"2020-03\", \"2020-04\", \"2020-05\", \"2020-06\", \"2020-07\", \"2020-08\", \"2020-09\", \"2020-10\", \"2020-11\", \"2020-12\"],\n      datasets: [{\n        label: 'My First dataset',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [400, 800, 1300, 2400, 3400, 6000, 8000, 11000, 8000, 10000, 13000, 15000]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.popup,\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        paddingLeft: '1%',\n        paddingRight: '1%',\n        textAlign: 'center',\n        color: \"DarkSlateGrey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \" As the heroku hosting service is very slow and times out after 30 seconds, we are unable to show the actual predictions of our machine learning model. To find out more about the model and try it yourself, we have included a link to the Jupyter Notebook in our ReadMe. The predicted data shown here is artificial. \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClose(),\n      style: {\n        padding: \"10px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, \"FORECASTED REVENUE\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default Prediction;","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/predict.js"],"names":["React","axios","Chart","Line","Dialog","defaults","baseURL","Prediction","Component","state","popup","handleClose","setState","render","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","paddingLeft","paddingRight","textAlign","color","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Chart from \"react-apexcharts\";\nimport {Line} from 'react-chartjs-2';\nimport Dialog from '@material-ui/core/Dialog';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport class Prediction extends React.Component {\n\n  state= {\n    popup:true\n  }\n  handleClose() {\n    this.setState({popup:false})\n  }\nrender() {\n\n\n\nconst data = {\n  labels: [\"2020-01\", \"2020-02\", \"2020-03\", \"2020-04\", \"2020-05\", \"2020-06\", \n  \"2020-07\",\"2020-08\",\"2020-09\",\"2020-10\",\"2020-11\",\"2020-12\"],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [400,800,1300,2400,3400,6000,8000,11000,8000,10000,13000,15000]\n    }\n  ]\n};\n\n\n    return (\n        <>\n     <Dialog open={this.state.popup} maxWidth='lg'>\n       <br/> \n                    <h4 style={{paddingLeft:'1%',paddingRight:'1%', textAlign:'center',color:\"DarkSlateGrey\"}}> As the heroku hosting service is very slow and times out after 30 seconds, \n                    we are unable to show the actual predictions of our machine learning model. To \n                    find out more about the model and try it yourself, we have included a link to \n                    the Jupyter Notebook in our ReadMe. The predicted data shown here is artificial. </h4> \n                    <br/>\n                <button onClick={() => this.handleClose()} style={{padding:\"10px 5px\"}}>Close</button>\n                </Dialog>\n    <h5>\nFORECASTED REVENUE\n  </h5>\n  <br/>\n      \n  <div className=\"line\"></div>\n        <Line data={data} />\n      \n  \n  \n      </>\n    )\n}\n\n}\n\n\nexport default Prediction;\n"]},"metadata":{},"sourceType":"module"}