{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input } from 'antd';\nimport * as actions from '../../store/actions/auth';\nimport './Login.css';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFinish = values => {\n      this.props.onAuth(values.username, values.password);\n      setTimeout(() => {\n        if (!this.props.error & !this.props.loading) {\n          window.location.href = \"/expense\";\n        }\n      }, 800);\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, \"Invalid username or password. Please try again.\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Loading\"), /*#__PURE__*/React.createElement(CircleLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), errorMessage, /*#__PURE__*/React.createElement(Form, {\n      onFinish: this.handleFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      html: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \" Login \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => {\n      dispatch(actions.authLogin(username, password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login/Login.js"],"names":["React","connect","Form","Input","actions","ClipLoader","LoginForm","Component","handleFinish","values","props","onAuth","username","password","setTimeout","error","loading","window","location","href","render","errorMessage","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCC,YAFoC,GAErBC,MAAM,IAAI;AACrB,WAAKC,KAAL,CAAWC,MAAX,CAAkBF,MAAM,CAACG,QAAzB,EAAmCH,MAAM,CAACI,QAA1C;AACAC,MAAAA,UAAU,CAAC,MAAM;AACjB,YAAI,CAAC,KAAKJ,KAAL,CAAWK,KAAZ,GAAoB,CAAC,KAAKL,KAAL,CAAWM,OAApC,EAA6C;AACzCC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACH;AACA,OAJS,EAIR,GAJQ,CAAV;AAKH,KATmC;AAAA;;AAWpCC,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAI,KAAKX,KAAL,CAAWK,KAAf,EAAsB;AAClBM,MAAAA,YAAY,gBACR;AAAG,QAAA,SAAS,EAAG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ;AAGH;;AAED,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKA,YAHL,eAII,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAG,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADM,eAIN,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAG,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJM,eAON;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPM,CAJJ,CADA;AAgBH;;AAnCmC;;AAuCxC,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,OAAO,EAAEO,KAAK,CAACP,OADZ;AAEHD,IAAAA,KAAK,EAAEQ,KAAK,CAACR;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5BY,MAAAA,QAAQ,CAACrB,OAAO,CAACsB,SAAR,CAAkBd,QAAlB,EAA2BC,QAA3B,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeZ,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form , Input } from 'antd';\nimport * as actions from '../../store/actions/auth'\nimport './Login.css';\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nclass LoginForm extends React.Component {\n\n    handleFinish = values => {\n        this.props.onAuth(values.username, values.password);\n        setTimeout(() => {\n        if (!this.props.error & !this.props.loading) {\n            window.location.href = \"/expense\";\n        }\n        },800)\n    }\n\n    render() {\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p className = \"error\">Invalid username or password. Please try again.</p>\n            )\n        }\n\n        return (\n        <div>     \n            <h1>Loading</h1>\n            <CircleLoader/>\n            {errorMessage}\n            <Form onFinish={this.handleFinish}>\n      <Form.Item name=\"username\" >\n        <Input placeholder = \"Username\"/>\n      </Form.Item>\n      <Form.Item name=\"password\" >\n        <Input placeholder = \"Password\"/>\n      </Form.Item>\n      <button html = \"submit\"> Login </button>\n        </Form>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => {\n            dispatch(actions.authLogin(username,password))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}