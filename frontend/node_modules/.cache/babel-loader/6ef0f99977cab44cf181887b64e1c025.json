{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js\";\nimport React from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\nimport './Register.css';\n\nclass RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFinish = e => {\n      this.props.onAuth(e.target.username.value, e.target.email.value, e.target.password.value, e.target.confirm.value);\n      this.props.history.push('/expense/');\n    };\n\n    this.check = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      name: \"nest-messages\",\n      onSubmit: this.handleFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirm\",\n      placeholder: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      required: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => {\n      dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js"],"names":["React","actions","connect","RegisterForm","Component","handleFinish","e","props","onAuth","target","username","value","email","password","confirm","history","push","check","render","required","message","getFieldValue","validator","rule","Promise","resolve","reject","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,gBAAP;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEvCC,YAFuC,GAExBC,CAAC,IAAI;AAChB,WAAKC,KAAL,CAAWC,MAAX,CAAkBF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,KAApC,EACEL,CAAC,CAACG,MAAF,CAASG,KAAT,CAAeD,KADjB,EAEEL,CAAC,CAACG,MAAF,CAASI,QAAT,CAAkBF,KAFpB,EAGEL,CAAC,CAACG,MAAF,CAASK,OAAT,CAAiBH,KAHnB;AAIA,WAAKJ,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,KARsC;;AAAA,SAUvCC,KAVuC,GAU/B,MAAM,CAAE,CAVuB;AAAA;;AAYvCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,QAAQ,EAAE,KAAKb,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,IAAI,EAAE,UADN;AAEA,MAAA,WAAW,EAAC,UAFZ;AAGA,MAAA,QAAQ,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMA;AACA,MAAA,IAAI,EAAG,UADP;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,WAAW,EAAC,UAHZ;AAIA,MAAA,QAAQ,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,eAaA;AACA,MAAA,IAAI,EAAG,UADP;AAEA,MAAA,IAAI,EAAC,SAFL;AAGA,MAAA,WAAW,EAAC,kBAHZ;AAIA,MAAA,YAAY,EAAE,CAAC,UAAD,CAJd;AAKA,MAAA,WAAW,MALX;AAMA,MAAA,QAAQ,MANR;AAOA,MAAA,KAAK,EAAE,CACL;AACEc,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL,CAAC;AAAEC,QAAAA;AAAF,OAAD,MAAwB;AACtBC,QAAAA,SAAS,CAACC,IAAD,EAAOZ,KAAP,EAAc;AACrB,cAAI,CAACA,KAAD,IAAUU,aAAa,CAAC,UAAD,CAAb,KAA8BV,KAA5C,EAAmD;AACjD,mBAAOa,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,iBAAOD,OAAO,CAACE,MAAR,CAAe,kDAAf,CAAP;AACD;;AANqB,OAAxB,CALK,CAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,eAmCA;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCA,CADF;AAyCD;;AAtDsC;;AA0D3C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,MAAM,EAAE,CAACE,QAAD,EAAWE,KAAX,EAAkBqB,SAAlB,EAA6BC,SAA7B,KAA2C;AAC/CF,MAAAA,QAAQ,CAAC/B,OAAO,CAACkC,UAAR,CAAmBzB,QAAnB,EAA4BE,KAA5B,EAAmCqB,SAAnC,EAA6CC,SAA7C,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAehC,OAAO,CAACyB,eAAD,EAAiBI,kBAAjB,CAAP,CAA4C5B,YAA5C,CAAf","sourcesContent":["import React from 'react';\nimport * as actions from '../../store/actions/auth'\nimport { connect } from 'react-redux'; \nimport './Register.css';\n\nclass RegisterForm extends React.Component {\n\n    handleFinish = e => {\n        this.props.onAuth(e.target.username.value, \n          e.target.email.value,\n          e.target.password.value,\n          e.target.confirm.value)\n        this.props.history.push('/expense/');\n    }\n\n    check = () => {}\n\n    render() {\n      return (\n        <form name=\"nest-messages\" onSubmit={this.handleFinish}>\n            <input \n            name= \"username\"\n            placeholder=\"Username\"\n            required\n            />\n        <input\n        type = \"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        required\n        />\n\n        <input\n        type = \"password\"\n        name=\"confirm\"\n        placeholder=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        required\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n        />\n        <button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </button>\n        </form>\n      );\n    };\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => {\n            dispatch(actions.authSignup(username,email, password1,password2))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}