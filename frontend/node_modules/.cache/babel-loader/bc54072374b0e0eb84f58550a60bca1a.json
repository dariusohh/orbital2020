{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/store/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Initial state to be replaced by rest API\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error\n      });\n    }\n  } //delete function\n\n\n  async function deleteTransaction(id) {\n    try {\n      //await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     }\n    // }\n    try {\n      // const res = await axios.post('/api/v1/transactions', transaction,config)\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: transaction\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/store/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","deleteTransaction","id","response","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAC,EADI;AAEjBC,EAAAA,KAAK,EAAC,IAFW;AAGjBC,EAAAA,OAAO,EAAC;AAHS,CAArB;AAMA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMK,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC;;AACA,iBAAeS,eAAf,GAAiC;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,OAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOZ,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEX;AAFJ,OAAD,CAAR;AAIH;AACJ,GAfyC,CAgB1C;;;AACA,iBAAea,iBAAf,CAAiCC,EAAjC,EAAqC;AACjC,QAAI;AACA;AACAR,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEG;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAOd,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEX,KAAK,CAACe,QAAN,CAAeH,IAAf,CAAoBZ;AAFxB,OAAD,CAAR;AAIH;AAEJ;;AAED,iBAAegB,cAAf,CAA8BC,WAA9B,EAA2C;AACvC;AACA;AACA;AACA;AACA;AACA,QAAI;AACD;AACCX,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,OAAO,EAAEM;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAOjB,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEX,KAAK,CAACe,QAAN,CAAeH,IAAf,CAAoBZ;AAFxB,OAAD,CAAR;AAIH;AAEJ;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCD,MAAAA,YAAY,EAACM,KAAK,CAACN,YADgB;AAEnCC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFsB;AAGnCC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHoB;AAInCM,MAAAA,eAJmC;AAKnCM,MAAAA,iBALmC;AAKhBG,MAAAA;AALgB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOHZ,QAPG,CAAR;AASH,CA/DM","sourcesContent":["import React, {createContext, useReducer} from  'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n//Initial state to be replaced by rest API\nconst initialState = {\n    transactions:[],\n    error:null,\n    loading:true\n}\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/');\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTIONS_ERROR',\n                payload: error\n            });\n        }\n    }\n    //delete function\n    async function deleteTransaction(id) {\n        try {\n            //await axios.delete(`/api/v1/transactions/${id}`);\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTIONS_ERROR',\n                payload: error.response.data.error \n            });\n        }\n        \n    }\n    \n    async function addTransaction(transaction) {\n        // const config = {\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     }\n        // }\n        try {\n           // const res = await axios.post('/api/v1/transactions', transaction,config)\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: transaction\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTIONS_ERROR',\n                payload: error.response.data.error \n            });\n        }\n        \n    }\n    \n    return (<GlobalContext.Provider value={{\n        transactions:state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction, addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}\n"]},"metadata":{},"sourceType":"module"}