{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/line.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class Graph2 extends React.Component {\n  render() {\n    const xlabels = [];\n    this.props.data.map(x => x.created_at).forEach(z => xlabels.push(z.slice(5, 10)));\n    const ylabels = [];\n    this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).reduce((acc, item) => ylabels.push(acc += item), 0);\n    const data = {\n      labels: xlabels,\n      datasets: [{\n        label: 'Profit Progress',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'DarkMagenta',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'DarkMagenta',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'DarkMagenta',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: ylabels\n      }]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        fontSize: 30,\n        color: 'DarkSlateGray',\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Current Profit: SGD $\", this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).reduce((acc, item) => acc += item, 0).toFixed(2)));\n  }\n\n}\nexport default Graph2;","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/line.js"],"names":["React","Line","axios","defaults","baseURL","Graph2","Component","render","xlabels","props","data","map","x","created_at","forEach","z","push","slice","ylabels","transaction","amount","num","parseFloat","reduce","acc","item","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","fontSize","color","textAlign","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;AAEA,OAAO,MAAOC,MAAP,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAE7CC,EAAAA,MAAM,GAAG;AAEP,UAAMC,OAAO,GAAG,EAAhB;AACA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,UAA3B,EAAuCC,OAAvC,CAA+CC,CAAC,IAAIP,OAAO,CAACQ,IAAR,CAAaD,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAU,EAAV,CAAb,CAApD;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,SAAKT,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBQ,WAAW,IAAIA,WAAW,CAACC,MAA/C,EAAuDT,GAAvD,CAA2DU,GAAG,IAAIC,UAAU,CAACD,GAAD,CAA5E,EAAmFE,MAAnF,CAA0F,CAACC,GAAD,EAAMC,IAAN,KAAeP,OAAO,CAACF,IAAR,CAAcQ,GAAG,IAAIC,IAArB,CAAzG,EAAsI,CAAtI;AAEE,UAAMf,IAAI,GAAG;AACTgB,MAAAA,MAAM,EAAElB,OADC;AAETmB,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,iBADT;AAEEC,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,WAAW,EAAE,GAHf;AAIEC,QAAAA,eAAe,EAAE,sBAJnB;AAKEC,QAAAA,WAAW,EAAC,aALd;AAMEC,QAAAA,cAAc,EAAE,MANlB;AAOEC,QAAAA,UAAU,EAAE,EAPd;AAQEC,QAAAA,gBAAgB,EAAE,GARpB;AASEC,QAAAA,eAAe,EAAE,OATnB;AAUEC,QAAAA,gBAAgB,EAAE,aAVpB;AAWEC,QAAAA,oBAAoB,EAAE,MAXxB;AAYEC,QAAAA,gBAAgB,EAAE,CAZpB;AAaEC,QAAAA,gBAAgB,EAAE,CAbpB;AAcEC,QAAAA,yBAAyB,EAAE,aAd7B;AAeEC,QAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,QAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,QAAAA,WAAW,EAAE,CAjBf;AAkBEC,QAAAA,cAAc,EAAE,EAlBlB;AAmBEnC,QAAAA,IAAI,EAAEQ;AAnBR,OADQ;AAFD,KAAb;AA4BA,wBAEG,uDACC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAER,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAM,MAAA,KAAK,EAAG;AAACoC,QAAAA,QAAQ,EAAC,EAAV;AAAcC,QAAAA,KAAK,EAAC,eAApB;AAAqCC,QAAAA,SAAS,EAAC;AAA/C,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACkB,KAAKvC,KAAL,CAAWC,IAAX,CACfC,GADe,CACXQ,WAAW,IAAIA,WAAW,CAACC,MADhB,EAEfT,GAFe,CAEXU,GAAG,IAAIC,UAAU,CAACD,GAAD,CAFN,EAGfE,MAHe,CAGR,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,IAAIC,IAHf,EAGsB,CAHtB,EAGyBwB,OAHzB,CAGiC,CAHjC,CADlB,CAFD,CAFH;AAaH;;AAlD4C;AAuD7C,eAAe5C,MAAf","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport class  Graph2 extends React.Component {\n \nrender() {\n\n  const xlabels = []\n  this.props.data.map(x => x.created_at).forEach(z => xlabels.push(z.slice(5,10)))\n  const ylabels = []\n  this.props.data.map(transaction => transaction.amount).map(num => parseFloat(num)).reduce((acc, item) => ylabels.push((acc += item)), 0)\n\n    const data = {\n        labels: xlabels,\n        datasets: [\n          {\n            label: 'Profit Progress',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor:'DarkMagenta',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'DarkMagenta',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'DarkMagenta',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: ylabels\n          }\n        ]\n      };\n      \n    \n    return (\n    \n       <>\n        <Line data={data} />\n        <text style= {{fontSize:30, color:'DarkSlateGray', textAlign:\"center\"}}>\n    Current Profit: SGD ${this.props.data\n          .map(transaction => transaction.amount)\n          .map(num => parseFloat(num))\n          .reduce((acc, item) => (acc += item), 0).toFixed(2)}\n   </text>\n     </>\n    \n    )\n}\n\n}\n\n\nexport default Graph2;\n"]},"metadata":{},"sourceType":"module"}