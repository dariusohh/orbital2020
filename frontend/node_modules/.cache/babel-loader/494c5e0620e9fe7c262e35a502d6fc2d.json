{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js\";\nimport React from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\nimport './Register.css';\n\nclass RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFinish = e => {\n      this.props.onAuth(e.target.username.value, e.target.email.value, e.target.password.value, e.target.confirm.value);\n      this.props.history.push('/expense/');\n    };\n\n    this.check = () => {\n      if (document.getElementById('password').value === document.getElementById('confirm_password').value) {\n        document.getElementById('message').style.color = 'green';\n        document.getElementById('message').innerHTML = 'matching';\n      } else {\n        document.getElementById('message').style.color = 'red';\n        document.getElementById('message').innerHTML = 'not matching';\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      name: \"nest-messages\",\n      onSubmit: this.handleFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"password :\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      id: \"password\",\n      type: \"password\",\n      onkeyup: \"check();\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }\n    }, \"confirm password:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirm_password\",\n      id: \"confirm_password\",\n      onkeyup: \"check();\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => {\n      dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js"],"names":["React","actions","connect","RegisterForm","Component","handleFinish","e","props","onAuth","target","username","value","email","password","confirm","history","push","check","document","getElementById","style","color","innerHTML","render","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as actions from '../../store/actions/auth'\nimport { connect } from 'react-redux'; \nimport './Register.css';\n\nclass RegisterForm extends React.Component {\n\n    handleFinish = e => {\n        this.props.onAuth(e.target.username.value, \n          e.target.email.value,\n          e.target.password.value,\n          e.target.confirm.value)\n        this.props.history.push('/expense/');\n    }\n\n    check = () => {\n      if (document.getElementById('password').value ===\n    document.getElementById('confirm_password').value) {\n    document.getElementById('message').style.color = 'green';\n    document.getElementById('message').innerHTML = 'matching';\n  } else {\n    document.getElementById('message').style.color = 'red';\n    document.getElementById('message').innerHTML = 'not matching';\n  }\n    }\n\n    render() {\n      return (\n        <form name=\"nest-messages\" onSubmit={this.handleFinish}>\n        <label>password :\n  <input name=\"password\" id=\"password\" type=\"password\" onkeyup='check();' />\n  </label>\n    <br/>\n<label>confirm password:\n  <input type=\"password\" name=\"confirm_password\" id=\"confirm_password\"  onkeyup='check();' /> \n  <span id='message'></span>\n</label>\n        <button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </button>\n        </form>\n      );\n    };\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => {\n            dispatch(actions.authSignup(username,email, password1,password2))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}