{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, username) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('username');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nconst checkAuthTimeout = expirationDate => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('rest_auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('rest_auth/register/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', username);\n      dispatch(authSuccess(token, username));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime() / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/store/actions/auth.js"],"names":["actionTypes","axios","defaults","baseURL","authStart","type","AUTH_START","authSuccess","token","username","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationDate","dispatch","setTimeout","authLogin","password","post","then","res","data","key","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token,username) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        username:username\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username');\n    return {\n        type:actionTypes.AUTH_LOGOUT\n    }\n}\n\nconst checkAuthTimeout = expirationDate => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationDate * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('rest_auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n            localStorage.setItem('token',token);\n            localStorage.setItem('expirationDate',expirationDate);\n            localStorage.setItem('username',username);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n    })\n}   \n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('rest_auth/register/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n            localStorage.setItem('token',token);\n            localStorage.setItem('expirationDate',expirationDate);\n            localStorage.setItem('username',username);\n            dispatch(authSuccess(token, username));\n            dispatch(checkAuthTimeout(3600))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n    })\n}   \n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime() / 1000))\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}