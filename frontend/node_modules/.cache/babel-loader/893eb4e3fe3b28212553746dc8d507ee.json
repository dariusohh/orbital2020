{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/Profile.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport axios from 'axios';\nimport Button from '@material-ui/core/button';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: {\n        company_name: \"\",\n        company_industry: \"\",\n        company_description: \"\",\n        show_public: \"\"\n      },\n      update: false,\n      count: 0\n    };\n\n    this.onSubmit = event => {\n      const company_name = event.target.company_name.value;\n      const company_industry = event.target.company_industry.value;\n      const company_description = event.target.company_description.value;\n      const show_public = event.target.show_public.checked;\n      const username = localStorage.getItem(\"username\");\n      const tele = event.target.tele.value;\n      const email = event.target.email.value;\n      const office = event.target.office.value;\n      const budget = event.target.budget.value;\n      const target = event.target.target.value;\n      const achievement = event.target.achievement.value; // const images = event.target.files[0];\n\n      this.setState({\n        update: false\n      });\n      return axios.put(`profile/${username}/`, {\n        username: username,\n        company_name: company_name,\n        company_industry: company_industry,\n        company_description: company_description,\n        show_public: show_public,\n        tele: tele,\n        email: email,\n        office: office,\n        budget: budget,\n        target: target,\n        achievement: achievement\n      }).catch(err => console.log(err));\n    };\n\n    this.setUpdate = event => {\n      this.setState({\n        update: true\n      });\n    };\n\n    this.switchChange = checked => {\n      this.setState({\n        show_public: checked\n      });\n    };\n\n    this.handleImageChange = e => {\n      this.setState({\n        images: e.target.files[0]\n      });\n    };\n\n    this.industryList = [\"Accounting\", \"Administration & Office Support\", \"Advertising, Arts & Media\", \"Banking & Financial Services\", \"Call Centre & Customer Service\", \"Community Services & Development\", \"Construction\", \"Consulting & Strategy\", \"Design & Architechture\", \"Education & Training\", \"Engineering\", \"Farming, Animals & Conservation\", \"Government & Defence\", \"Healthcare & Medical\", \"Hospitality & Tourism\", \"Human Resources & Recruitment\", \"Information & Communication Technology\", \"Insurance & Superannuation\", \"Legal\", \"Manufacturing, Transport & Logistics\", \"Marketing & Communications\", \"Mining, Resources & Energy\", \"Real Estate & Property\", \"Retail & Consumer Products\", \"Sales\", \"Science & Technology\", \"Sport & Recreation\", \"Trades & Services\", \"Others\"];\n  }\n\n  componentDidMount() {\n    axios.get(`profile/${localStorage.getItem(\"username\")}/`).then(prof => {\n      this.setState({\n        profile: prof.data,\n        count: prof.data.company_description.length\n      });\n    });\n  }\n\n  handleKeypress(event) {\n    console.log('*****', event.target.value);\n    this.setState({\n      count: event.target.value.length\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Company Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      type: \"text\",\n      name: \"company_name\",\n      defaultValue: this.state.profile.company_name,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Company Industry:\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"exp-dropdown\",\n      style: {\n        margin: \"15px 15px 25px 0px\",\n        borderRadius: \"0px\",\n        padding: \"10px 12px\"\n      },\n      name: \"company_industry\",\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, this.industryList.map(x => this.state.profile.company_industry === x ? /*#__PURE__*/React.createElement(\"option\", {\n      value: x,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, x) : /*#__PURE__*/React.createElement(\"option\", {\n      value: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, x))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"Company Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        height: '100px',\n        width: '100%'\n      },\n      name: \"company_description\",\n      onChange: event => this.handleKeypress(event),\n      defaultValue: this.state.profile.company_description,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \" Count :  \", this.state.count, \" / 750 \"), this.state.count > 750 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Maximum Character Reached\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Company Contact Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      type: \"text\",\n      name: \"tele\",\n      defaultValue: this.state.profile.tele,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Company Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      type: \"text\",\n      name: \"email\",\n      defaultValue: this.state.profile.email,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Company Office:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      type: \"text\",\n      name: \"office\",\n      defaultValue: this.state.profile.office,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Company Budget:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      style: {\n        width: \"20%\"\n      },\n      type: \"text\",\n      name: \"budget\",\n      defaultValue: this.state.profile.budget,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Company Target:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      style: {\n        width: \"20%\"\n      },\n      type: \"text\",\n      name: \"target\",\n      defaultValue: this.state.profile.target,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Company Acheivement:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"(Place a comma between each achievement)\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"trans-input\",\n      type: \"text\",\n      name: \"achievement\",\n      defaultValue: this.state.profile.achievement,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Show profile to Public:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"show_public\",\n      defaultChecked: this.state.profile.show_public ? \"true\" : null,\n      disabled: !this.state.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), this.state.update && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: this.state.count > 750,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    }, \"Update Profile\")), !this.state.update && /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.setUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Edit Profile\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Profile/Profile.js"],"names":["React","connect","InputLabel","axios","Button","Profile","Component","state","profile","company_name","company_industry","company_description","show_public","update","count","onSubmit","event","target","value","checked","username","localStorage","getItem","tele","email","office","budget","achievement","setState","put","catch","err","console","log","setUpdate","switchChange","handleImageChange","e","images","files","industryList","componentDidMount","get","then","prof","data","length","handleKeypress","render","margin","borderRadius","padding","map","x","height","width","color","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport axios from 'axios';\nimport Button from '@material-ui/core/button';\n\nclass Profile extends React.Component {\n\n    state = {\n        profile: {company_name: \"\", \n            company_industry: \"\",\n            company_description: \"\", \n            show_public: \"\"},\n        update: false,\n             count:0\n    }\n    \n    componentDidMount() {\n        \n          axios.get(`profile/${localStorage.getItem(\"username\")}/`)\n          .then(prof => {\n              this.setState({\n                  profile: prof.data,\n                    count : prof.data.company_description.length\n              });\n          })\n      }\n\n      onSubmit = event => {\n      \n        const company_name = event.target.company_name.value;\n        const company_industry = event.target.company_industry.value;        \n\nconst company_description = event.target.company_description.value;\nconst show_public = event.target.show_public.checked;\nconst username = localStorage.getItem(\"username\");\nconst tele = event.target.tele.value;\nconst email = event.target.email.value;\nconst office = event.target.office.value;\nconst budget = event.target.budget.value;\nconst target = event.target.target.value;\nconst achievement = event.target.achievement.value;\n// const images = event.target.files[0];\n\nthis.setState({update:false})\n\n\nreturn axios.put(`profile/${username}/`, \n{username: username, company_name: company_name, company_industry: company_industry,\n    company_description: company_description, show_public: show_public, tele:tele, email:email, \n    office:office, budget:budget, target:target, achievement: achievement})\n    .catch(err => console.log(err))\n}\n\n    setUpdate = event => {\n        this.setState({update:true})\n    }\n\n    switchChange = checked => {\n        this.setState({ show_public: checked });\n    }\n  handleKeypress(event) {\n    console.log('*****', event.target.value);\n    this.setState({ count:event.target.value.length });\n  }\n\n  \n    handleImageChange = (e) => {\n        this.setState({\n          images: e.target.files[0]\n        })\n      };\n\n    industryList = [\"Accounting\",\"Administration & Office Support\",\"Advertising, Arts & Media\",\"Banking & Financial Services\",\n\"Call Centre & Customer Service\",\"Community Services & Development\",\"Construction\",\"Consulting & Strategy\",\"Design & Architechture\"\n,\"Education & Training\",\"Engineering\",\"Farming, Animals & Conservation\",\"Government & Defence\",\"Healthcare & Medical\"\n,\"Hospitality & Tourism\",\"Human Resources & Recruitment\",\"Information & Communication Technology\",\"Insurance & Superannuation\"\n,\"Legal\",\"Manufacturing, Transport & Logistics\",\"Marketing & Communications\",\"Mining, Resources & Energy\",\"Real Estate & Property\"\n,\"Retail & Consumer Products\",\"Sales\",\"Science & Technology\",\"Sport & Recreation\",\"Trades & Services\",\"Others\"]\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n            <InputLabel >Company Name:</InputLabel>\n           \n                <input className=\"trans-input\" type=\"text\" name = \"company_name\" defaultValue = {this.state.profile.company_name} disabled = {!this.state.update}/>\n                <br/>\n        \n                <InputLabel >Company Industry:</InputLabel>\n         \n                <select className=\"exp-dropdown\" style={{margin:\"15px 15px 25px 0px\", \n                borderRadius:\"0px\",padding:\"10px 12px\"}} name = \"company_industry\" \n                disabled = {!this.state.update}>\n                {\n                    this.industryList.map(x => \n                    this.state.profile.company_industry === x \n                    ? \n                    <option value={x} selected>{x}</option>\n                    :\n                    <option value={x}>{x}</option>)\n                }\n\n            </select>\n                  <br/>\n                  <InputLabel >Company Description:</InputLabel>\n       \n                <textarea style={{height:'100px', width:'100%'}} name = \"company_description\" onChange={(event)=>this.handleKeypress(event)} defaultValue = {this.state.profile.company_description} disabled  = {!this.state.update}/>\n                <p> Count :  {this.state.count} / 750 </p>\n                {this.state.count > 750 &&\n                <p style={{color:'red'}}>Maximum Character Reached</p>\n                }\n                <br/>\n                <InputLabel >Company Contact Number:</InputLabel>\n             \n                <input className=\"trans-input\" type = \"text\" name = \"tele\" defaultValue = {this.state.profile.tele} disabled  = {!this.state.update}/>\n                <br/>\n                <InputLabel >Company Email:</InputLabel>\n           \n                <input className=\"trans-input\" type = \"text\" name = \"email\" defaultValue = {this.state.profile.email} disabled  = {!this.state.update}/>\n                <br/>\n                <InputLabel >Company Office:</InputLabel>\n         \n                <input className=\"trans-input\" type = \"text\" name = \"office\" defaultValue = {this.state.profile.office} disabled  = {!this.state.update}/>\n                <br/>\n                <InputLabel >Company Budget:</InputLabel>\n          \n                <input className=\"trans-input\" style={{width:\"20%\"}} type = \"text\" name = \"budget\" defaultValue = {this.state.profile.budget} disabled  = {!this.state.update}/>\n                <br/>\n                <InputLabel >Company Target:</InputLabel>\n             \n                <input className=\"trans-input\" style={{width:\"20%\"}} type = \"text\" name = \"target\" defaultValue = {this.state.profile.target} disabled  = {!this.state.update}/>\n                <br/>\n                <InputLabel >Company Acheivement:</InputLabel>\n                <p>(Place a comma between each achievement)</p>\n           \n                <input className=\"trans-input\" type = \"text\" name = \"achievement\" defaultValue = {this.state.profile.achievement} disabled  = {!this.state.update}/>\n                <br/>\n                {/* <label>Profile Picture: </label>\n                <br/>\n                <input type=\"file\" id=\"images\"\n                   accept=\"images/png, images/jpeg\" onChange={this.handleImageChange} defaultValue = {this.state.profile.images} required disabled  = {!this.state.update}/>\n                <br/>\n                <br/> */}\n                <InputLabel >Show profile to Public:</InputLabel>\n                <input type=\"checkbox\" name = \"show_public\" \n                defaultChecked = {this.state.profile.show_public ? \"true\" : null} disabled  = {!this.state.update}/>\n                <br/>\n                { this.state.update && \n                 <Button variant=\"contained\" type=\"submit\" disabled={this.state.count > 750} color=\"primary\">Update Profile</Button> \n                }\n            </form>\n            { !this.state.update && \n            <form onSubmit = {this.setUpdate}>\n                <Button variant=\"contained\"type= \"submit\" color=\"primary\">Edit Profile</Button>\n            </form>\n            }\n            </div>\n        )\n}\n}\n \nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n  }\n  \n  export default connect(mapStateToProps)(Profile);\n\n\n"]},"metadata":{},"sourceType":"module"}