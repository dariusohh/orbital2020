{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js\";\nimport React, { useRef } from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport { useForm } from \"react-hook-form\";\n\nfunction RegisterForm(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = e => {\n    props.onAuth(e.username, e.email, e.password, e.confirm);\n    setTimeout(() => {\n      if (localStorage.getItem(\"username\")) {\n        const name = event.target.name.value;\n        let amount = event.target.amount.value;\n\n        if (this.props.type === \"Expense\") {\n          amount = -amount;\n        }\n\n        const username = localStorage.getItem(\"username\");\n        return axios.post('api/', {\n          name: name,\n          username: username,\n          amount: amount\n        }).catch(err => console.log(err));\n        window.location.href = \"/expense\";\n      }\n    }, 400);\n  };\n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Username/email already exist!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, errorMessage, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    ref: register({\n      required: \"Username is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }\n  }, errors.username.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\n        message: \"Email is invalid\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }\n  }, errors.email.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: \"Password is required\",\n      minLength: {\n        value: 8,\n        message: \"Password should have minimum length of 8\"\n      },\n      pattern: {\n        value: /[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,\n        message: \"Password must contain at least one letter and number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"confirm\",\n    placeholder: \"Confirm Password\",\n    type: \"password\",\n    ref: register({\n      validate: value => value === password.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), errors.confirm && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }\n  }, \"The passwords do not match\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => {\n      dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/login/Register.js"],"names":["React","useRef","actions","connect","useForm","RegisterForm","props","register","handleSubmit","errors","watch","password","current","onSubmit","e","onAuth","username","email","confirm","setTimeout","localStorage","getItem","name","event","target","value","amount","type","axios","post","catch","err","console","log","window","location","href","errorMessage","error","required","message","pattern","minLength","validate","mapStateToProps","state","loading","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as actions from '../../store/actions/auth'\nimport { connect } from 'react-redux'; \nimport './Login.css';\nimport {useForm} from \"react-hook-form\";\n\nfunction RegisterForm(props) {\n  const { register, handleSubmit, errors, watch } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = e => {\n      props.onAuth(e.username, \n          e.email,\n          e.password,\n          e.confirm)\n          setTimeout(() => {\n            if (localStorage.getItem(\"username\")) {\n              const name = event.target.name.value;\n              let amount = event.target.amount.value;\n              if (this.props.type === \"Expense\") {\n                amount = -amount\n              }\n              const username = localStorage.getItem(\"username\");\n              return axios.post('api/', {name: name, username: username,\n                      amount: amount})\n                      .catch(err => console.log(err))\n              window.location.href = \"/expense\";\n            }\n            },400)\n    }\n\n  let errorMessage = null;\n    if (props.error) {\n        errorMessage = (\n            <p className = \"error\">Username/email already exist!</p>\n        )\n    }\n      return (\n        <form onSubmit = {handleSubmit(onSubmit)}>\n        {errorMessage}\n          <input type=\"text\" \n          placeholder=\"Username\" \n          name=\"username\" \n          ref={register({required:\"Username is required\"})} />\n          {errors.username && <p className = \"error\">{errors.username.message}</p>}\n\n          <input type=\"text\" \n          placeholder=\"Email\" \n          name=\"email\" \n          ref={register({required:\"Email is required\", pattern:{value:/^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,message:\"Email is invalid\"}})}/>\n          {errors.email && <p className = \"error\">{errors.email.message}</p>}\n\n          <input\n            type = \"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            ref={register({required:\"Password is required\",\n            minLength:{value:8,message:\"Password should have minimum length of 8\"}, \n            pattern:{value:/[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,message:\"Password must contain at least one letter and number\"}})}\n            />\n            {errors.password && <p className = \"error\">{errors.password.message}</p>}\n          <input\n        name=\"confirm\"\n        placeholder = \"Confirm Password\"\n        type=\"password\"\n        ref={register({\n          validate: value =>\n            value === password.current\n        })}\n      />\n      {errors.confirm && <p className = \"error\">The passwords do not match</p>}\n      <button type = \"submit\">Sign Up</button>\n        </form>\n      );\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => {\n            dispatch(actions.authSignup(username,email, password1,password2))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}