{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/orbital2020/frontend/src/components/Visual/line.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\nexport class Graph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expense: [],\n      option: \"day\"\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => axios.get('api/').then(res => {\n      const new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n      this.setState({\n        expense: new_res\n      });\n    }), 200);\n  }\n\n  render() {\n    const profit = {};\n    const revenue = {};\n    const expense = {};\n    const daydiff = (this.props.endDate.getTime() - this.props.startDate.getTime()) / (1000 * 60 * 60 * 24);\n\n    for (var i = 0; i <= daydiff; i++) {\n      var date = new Date(this.props.startDate.getTime() + i * 1000 * 60 * 60 * 24);\n      profit[date.toLocaleDateString().slice(0, 5)] = 0;\n      revenue[date.toLocaleDateString().slice(0, 5)] = 0;\n      expense[date.toLocaleDateString().slice(0, 5)] = 0;\n    }\n\n    this.props.data.forEach(x => {\n      const objyear = x.created_at.substring(0, 4);\n      const objmth = x.created_at.substring(5, 7) - 1;\n      const objday = x.created_at.substring(8, 10);\n      const objhour = parseInt(x.created_at.substring(11, 13)) + 8;\n      const objmin = x.created_at.substring(14, 16);\n      const objsec = x.created_at.substring(17, 19);\n      const created = new Date(objyear, objmth, objday, objhour, objmin, objsec).toLocaleDateString().slice(0, 5);\n      profit[created] += parseFloat(x.amount);\n\n      if (x.amount > 0) {\n        revenue[created] += parseFloat(x.amount);\n      } else {\n        expense[created] -= parseFloat(x.amount);\n      }\n    });\n    const xlabels = Object.keys(profit);\n    var profit_label = [];\n    var revenue_label = [];\n    var expense_label = [];\n\n    for (let x of xlabels) {\n      profit_label.push(profit[x]);\n      revenue_label.push(revenue[x]);\n      expense_label.push(expense[x]);\n    }\n\n    const month_profit = {};\n    const month_revenue = {};\n    const month_expense = {};\n\n    for (var j = 11; j >= 0; j--) {\n      var mthyeardate = new Date(this.props.endDate.getFullYear(), this.props.endDate.getMonth() - j);\n      var mthyear = mthyeardate.toLocaleDateString().slice(3, 6) + mthyeardate.toLocaleDateString().slice(8, 10);\n      month_profit[mthyear] = 0;\n      month_revenue[mthyear] = 0;\n      month_expense[mthyear] = 0;\n    }\n\n    this.props.data.forEach(x => {\n      const objyear = x.created_at.substring(0, 4);\n      const objmth = x.created_at.substring(5, 7) - 1;\n      const objday = x.created_at.substring(8, 10);\n      const objhour = parseInt(x.created_at.substring(11, 13)) + 8;\n      const objmin = x.created_at.substring(14, 16);\n      const objsec = x.created_at.substring(17, 19);\n      const createddate = new Date(objyear, objmth, objday, objhour, objmin, objsec);\n      const created = createddate.toLocaleDateString().slice(3, 6) + createddate.toLocaleDateString().slice(8, 10);\n      month_profit[created] += parseFloat(x.amount);\n\n      if (x.amount > 0) {\n        month_revenue[created] += parseFloat(x.amount);\n      } else {\n        month_expense[created] -= parseFloat(x.amount);\n      }\n    });\n    const mth_xlabels = Object.keys(month_profit);\n    var mthprofit_label = [];\n    var mthrevenue_label = [];\n    var mthexpense_label = [];\n\n    for (let x of mth_xlabels) {\n      mthprofit_label.push(month_profit[x]);\n      mthrevenue_label.push(month_revenue[x]);\n      mthexpense_label.push(month_expense[x]);\n    }\n\n    const data = {\n      labels: this.state.option === \"day\" ? xlabels : mth_xlabels,\n      datasets: [{\n        label: 'Profit',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(34, 167, 240, 1)',\n        borderColor: 'rgba(34, 167, 240, 1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(34, 167, 240, 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(34, 167, 240, 1)',\n        pointHoverBorderColor: 'rgba(34, 167, 240, 1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: this.state.option === \"day\" ? profit_label : mthprofit_label\n      }, {\n        label: 'Revenue',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(41, 241, 195, 1)',\n        borderColor: 'rgba(41, 241, 195, 1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(41, 241, 195, 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(41, 241, 195, 1)',\n        pointHoverBorderColor: 'rgba(41, 241, 195, 1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: this.state.option === \"day\" ? revenue_label : mthrevenue_label\n      }, {\n        label: 'Expense',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(246, 36, 89, 1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(246, 36, 89, 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(246, 36, 89, 1)',\n        pointHoverBorderColor: 'rgba(246, 36, 89, 1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: this.state.option === \"day\" ? expense_label : mthexpense_label\n      }]\n    };\n    var options = {\n      maintainAspectRatio: false\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, \"Daily Progress\"), /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"More\")), this.state.option === \"day\" ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.setState({\n        option: \"month\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"Change to Month\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.setState({\n        option: \"day\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"Change to Day\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(Graph);","map":{"version":3,"sources":["/Users/darius/Desktop/orbital2020/frontend/src/components/Visual/line.js"],"names":["React","Line","Link","axios","connect","defaults","baseURL","Graph","Component","state","expense","option","componentDidMount","setTimeout","get","then","res","new_res","data","filter","x","username","localStorage","getItem","setState","render","profit","revenue","daydiff","props","endDate","getTime","startDate","i","date","Date","toLocaleDateString","slice","forEach","objyear","created_at","substring","objmth","objday","objhour","parseInt","objmin","objsec","created","parseFloat","amount","xlabels","Object","keys","profit_label","revenue_label","expense_label","push","month_profit","month_revenue","month_expense","j","mthyeardate","getFullYear","getMonth","mthyear","createddate","mth_xlabels","mthprofit_label","mthrevenue_label","mthexpense_label","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","maintainAspectRatio","e","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {Link } from \"react-router-dom\"; \nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\nexport class Graph extends React.Component {\n  state = {\n    expense: [],\n    option: \"day\"\n}\n\n\ncomponentDidMount() {\n    setTimeout(() => \n      axios.get('api/')\n      .then(res => {\n          const new_res = res.data.filter(x => x.username === localStorage.getItem(\"username\"));\n          this.setState({\n              expense: new_res\n          });\n      }), 200);\n  }\n\n\n\nrender() {\n\n  const profit = {}\n  const revenue = {}\n  const expense = {}\n\n  const daydiff = (this.props.endDate.getTime() - this.props.startDate.getTime()) / (1000*60*60*24)\n  for (var i = 0; i <= daydiff; i++) {\n    var date = new Date(this.props.startDate.getTime() + (i*1000*60*60*24));\n    profit[date.toLocaleDateString().slice(0,5)] = 0\n    revenue[date.toLocaleDateString().slice(0,5)] = 0\n    expense[date.toLocaleDateString().slice(0,5)] = 0\n  }\n  this.props.data.forEach(x => {\n    const objyear = x.created_at.substring(0,4)\n    const objmth = x.created_at.substring(5,7) - 1\n    const objday = x.created_at.substring(8,10)\n    const objhour = parseInt(x.created_at.substring(11,13)) + 8\n    const objmin = x.created_at.substring(14,16)\n    const objsec = x.created_at.substring(17,19)\n    const created = new Date(objyear,objmth,objday, objhour, objmin, objsec).toLocaleDateString().slice(0,5)\n    profit[created] += parseFloat(x.amount)\n    if (x.amount > 0) {\n      revenue[created] += parseFloat(x.amount)\n    } else {\n      expense[created] -= parseFloat(x.amount)\n    }\n  })\n\n  const xlabels = Object.keys(profit)\n  var profit_label = []\n  var revenue_label = []\n  var expense_label = []\n  for (let x of xlabels) {\n    profit_label.push(profit[x])\n    revenue_label.push(revenue[x])\n    expense_label.push(expense[x])\n  }\n\n  const month_profit = {}\n  const month_revenue = {}\n  const month_expense = {}\n  for (var j = 11; j >= 0; j--) {\n    var mthyeardate = new Date(this.props.endDate.getFullYear(),this.props.endDate.getMonth() - j)\n    var mthyear = mthyeardate.toLocaleDateString().slice(3,6) + mthyeardate.toLocaleDateString().slice(8,10)\n    month_profit[mthyear] = 0\n    month_revenue[mthyear] = 0\n    month_expense[mthyear] = 0\n  }\n\n  this.props.data.forEach(x => {\n    const objyear = x.created_at.substring(0,4)\n    const objmth = x.created_at.substring(5,7) - 1\n    const objday = x.created_at.substring(8,10)\n    const objhour = parseInt(x.created_at.substring(11,13)) + 8\n    const objmin = x.created_at.substring(14,16)\n    const objsec = x.created_at.substring(17,19)\n    const createddate = new Date(objyear,objmth,objday, objhour, objmin, objsec)\n    const created = createddate.toLocaleDateString().slice(3,6) + createddate.toLocaleDateString().slice(8,10)\n    month_profit[created] += parseFloat(x.amount)\n    if (x.amount > 0) {\n      month_revenue[created] += parseFloat(x.amount)\n    } else {\n      month_expense[created] -= parseFloat(x.amount)\n    }\n  })\n\n  const mth_xlabels = Object.keys(month_profit)\n  var mthprofit_label = []\n  var mthrevenue_label = []\n  var mthexpense_label = []\n  for (let x of mth_xlabels) {\n    mthprofit_label.push(month_profit[x])\n    mthrevenue_label.push(month_revenue[x])\n    mthexpense_label.push(month_expense[x])\n  }\n\n    const data = {\n        labels: this.state.option === \"day\" ? xlabels : mth_xlabels,\n        datasets: [\n          {\n            label: 'Profit',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(34, 167, 240, 1)',\n            borderColor: 'rgba(34, 167, 240, 1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(34, 167, 240, 1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(34, 167, 240, 1)',\n            pointHoverBorderColor: 'rgba(34, 167, 240, 1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: this.state.option === \"day\" ? profit_label : mthprofit_label\n          },\n          {\n            label: 'Revenue',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(41, 241, 195, 1)',\n            borderColor: 'rgba(41, 241, 195, 1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(41, 241, 195, 1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(41, 241, 195, 1)',\n            pointHoverBorderColor: 'rgba(41, 241, 195, 1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: this.state.option === \"day\" ? revenue_label : mthrevenue_label\n          },\n          {\n            label: 'Expense',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(246, 36, 89, 1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(246, 36, 89, 1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(246, 36, 89, 1)',\n            pointHoverBorderColor: 'rgba(246, 36, 89, 1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: this.state.option === \"day\" ? expense_label : mthexpense_label\n          }\n\n\n        ]\n      };\n    \n      var options = {\n        maintainAspectRatio: false\n      }\n\n\n    return (\n        <div>\n        <h2 className='text2'>Daily Progress</h2>\n        <Line data={data} options = {options}/>\n        <Link to=\"/Login\">\n            <button className=\"Btn\">\n              More\n            </button>\n            </Link>\n            { this.state.option === \"day\" ? \n            <button onClick={(e) => this.setState({option:\"month\"})}>Change to Month</button>\n            :\n            <button onClick={(e) => this.setState({option:\"day\"})}>Change to Day</button>\n            }\n      </div>\n    )\n}\n\n}\n\nconst mapStateToProps = state => {\n  return {\n      token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(Graph);\n"]},"metadata":{},"sourceType":"module"}